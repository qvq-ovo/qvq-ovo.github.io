<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SSM框架整合</title>
      <link href="/2023/01/25/SSM%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88/"/>
      <url>/2023/01/25/SSM%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><font size=4><b>前言📝</b></font><br>虽然零零散散的学了些SSM相干的知识,但过了太久也忘得差不多了.<br>这里再跟着狂神学习下SSM整合框架的基本搭建流程.<br>同时实现项目一些简单操作.</p><p>参考资料:<br><a href="https://mp.weixin.qq.com/s/SDxqGu_il3MUCTcN1EYrng">狂神说SpringMVC05：整合SSM框架</a><br><a href="https://www.bilibili.com/video/BV1RE41127rv?p=1">狂神说Java SSM框架最新整合教学IDEA版</a></p><p>相关环境:</p><ul><li>IDEA2021.2.1</li><li>MySQL8.0+</li><li>Tomcat9.0</li><li>Maven3.8</li><li>Jdk8</li></ul></div><h2 id="一-搭建项目数据库"><a href="#一-搭建项目数据库" class="headerlink" title="一: 搭建项目数据库"></a>一: 搭建项目数据库</h2><p>本项目创建一个存放书籍信息的书籍库:</p><p>创建数据表+插入信息:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `ssmbuild`;</span><br><span class="line"></span><br><span class="line">USE `ssmbuild`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `books`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `books` (</span><br><span class="line">`bookID` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;书id&#x27;</span>,</span><br><span class="line">`bookName` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;书名&#x27;</span>,</span><br><span class="line">`bookCounts` <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;数量&#x27;</span>,</span><br><span class="line">`detail` <span class="type">VARCHAR</span>(<span class="number">200</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;描述&#x27;</span>,</span><br><span class="line">KEY `bookID` (`bookID`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span>  <span class="keyword">INTO</span> `books`(`bookID`,`bookName`,`bookCounts`,`detail`)<span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>,<span class="string">&#x27;Java&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;从入门到放弃&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;MySQL&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;从删库到跑路&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;Linux&#x27;</span>,<span class="number">5</span>,<span class="string">&#x27;从进门到进牢&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h2 id="二-idea搭建基本环境"><a href="#二-idea搭建基本环境" class="headerlink" title="二. idea搭建基本环境"></a>二. idea搭建基本环境</h2><p>首先搭建Maven空项目<br><div class="note success no-icon flat"><p>Maven中有很多项目骨架.<br>选择后可以直接生成项目框架.<br>这里为了学习,选择从空项目搭建.</p></div></p><p>项目名:<code>BookProject</code></p><h3 id="2-1-配置pom-xml"><a href="#2-1-配置pom-xml" class="headerlink" title="2.1 配置pom.xml"></a>2.1 配置pom.xml</h3><p>配置项目所需要的依赖包和解决静态资源导出问题.</p><p>依赖配置:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Junit--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--数据库驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 数据库连接池: c3p0很老了 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Servlet - JSP --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Mybatis--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Spring--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>配置静态资源导出解决办法:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--静态资源导出--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>使用Maven就是方便导包,同时也方便看清楚包之间的关系:</p><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230125/20230125_1.jpg" alt="jar包关系图" style="zoom:80%;" /></p><h3 id="2-2-创建包和配置xml文件"><a href="#2-2-创建包和配置xml文件" class="headerlink" title="2.2 创建包和配置xml文件"></a>2.2 创建包和配置xml文件</h3><p>创建成功后项目结构:<br><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230125/20230125_2.jpg" alt="jar包关系图" style="zoom:60%;" /></p><p>applicationContext.xml配置:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br>mybatis-config.xml配置:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><div class="note info no-icon flat"><p>两个基本模板:<br>applicationContext.xml基本模板<br>mybatis-config.xml基本模板<br>(写这个方便检索)</p></div></p><h2 id="三-Mybatis整合配置"><a href="#三-Mybatis整合配置" class="headerlink" title="三. Mybatis整合配置"></a>三. Mybatis整合配置</h2><p>对应视频1: 整合Mybatis层</p><h3 id="3-1-配置数据库连接文件"><a href="#3-1-配置数据库连接文件" class="headerlink" title="3.1 配置数据库连接文件"></a>3.1 配置数据库连接文件</h3><p>文件名: <code>database.properties</code><br>内容:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jdbc.driver=com.mysql.cj.jdbc.Driver</span><br><span class="line">jdbc.url=jdbc:mysql://localhost:3306/ssmbuild?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=Asia/Shanghai</span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=1123@.com</span><br></pre></td></tr></table></figure><br>这里我使用的MySQL8.0+,所以jdbc.url必须配置时区.</p><h3 id="3-2-idea导入Lombok"><a href="#3-2-idea导入Lombok" class="headerlink" title="3.2 idea导入Lombok"></a>3.2 idea导入Lombok</h3><p><strong>Lombok作用</strong>: 通过简单的注解的形式来帮助我们简化消除一些必须有但显得很臃肿的Java代码的工具.<br>简单来说:<br>当我们新建了一个类,然后在其中写了几个字段,通常情况下我们需要手动去建立getter和setter方法,构造函数啊之类的.<br>而lombok的作用就是为了省去我们手动创建这些代码的麻烦,它能够在我们编译源码的时候自动帮我们生成这些方法.</p><p><strong>导入过程:</strong><br>不仅需要<u>项目中导入Lombok依赖</u>,<u>idea也需要安装Lombok插件</u>.</p><p>项目导入Lombok依赖:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="3-3-编写pojo类"><a href="#3-3-编写pojo类" class="headerlink" title="3.3 编写pojo类"></a>3.3 编写pojo类</h3><p>有了Lombok的支持,pojo类可以摆脱臃肿的类方法:</p><p>Books类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Books</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> bookID;</span><br><span class="line">    <span class="keyword">private</span> String bookName;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> bookCounts;</span><br><span class="line">    <span class="keyword">private</span> String detail;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><div class="note info no-icon flat"><p><strong>Lombok关于javaBean常用注解</strong>:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span> <span class="comment">// ToString,get/set...方法</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span> <span class="comment">// 全参构造</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span> <span class="comment">// 无参构造</span></span><br></pre></td></tr></table></figure><br>网上可以搜索到更多其他方法.</p></div>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编写脚本协助上传图片</title>
      <link href="/2023/01/15/%E7%BC%96%E5%86%99%E8%84%9A%E6%9C%AC%E5%8D%8F%E5%8A%A9%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/"/>
      <url>/2023/01/15/%E7%BC%96%E5%86%99%E8%84%9A%E6%9C%AC%E5%8D%8F%E5%8A%A9%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><font size=4><b>前言📝</b></font><br>由于貌似PicGo不能兼容vs code,使用PicGo方法并没有太方便.(自我感觉)<br>因此,我想到使用bat命令来实现git提交功能.</p></div><h2 id="1-bat实现自动生成目录"><a href="#1-bat实现自动生成目录" class="headerlink" title="1. bat实现自动生成目录"></a>1. bat实现自动生成目录</h2><p>为了方便图片处理, 我会将当天的图片都放在同一个文件夹中, 而现在使用bat命令来实现该功能.</p><h3 id="1-1-基础功能"><a href="#1-1-基础功能" class="headerlink" title="1.1 基础功能"></a>1.1 基础功能</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">::关闭显示</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line">::显示本地时间格式</span><br><span class="line">::<span class="built_in">echo</span> <span class="variable">%date%</span></span><br><span class="line">::周日 <span class="number">2023</span>/<span class="number">01</span>/<span class="number">15</span></span><br><span class="line"></span><br><span class="line">::dd=日期</span><br><span class="line"><span class="built_in">set</span> dd=<span class="variable">%date:~11,2%</span>  </span><br><span class="line">::mm=月份</span><br><span class="line"><span class="built_in">set</span> mm=<span class="variable">%date:~8,2%</span></span><br><span class="line">::yy=年份</span><br><span class="line"><span class="built_in">set</span> yy=<span class="variable">%date:~3,4%</span></span><br><span class="line">::folder=年月日</span><br><span class="line"><span class="built_in">set</span> folder=&quot;<span class="variable">%yy%</span><span class="variable">%mm%</span><span class="variable">%dd%</span>&quot;</span><br><span class="line"></span><br><span class="line">::创建文件夹</span><br><span class="line"><span class="built_in">md</span>  <span class="variable">%folder%</span></span><br><span class="line"></span><br><span class="line">::暂停，保持<span class="built_in">cmd</span>窗口，调试时方便信息查看，正常使用时可删除</span><br><span class="line">::<span class="built_in">pause</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-2-进一步偷懒"><a href="#1-2-进一步偷懒" class="headerlink" title="1.2 进一步偷懒"></a>1.2 进一步偷懒</h3><p>为了进一步方便图片重命名,可以进一步改造代码:新增保存信息至剪切板功能!<br>在上述代码后追加:<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">::新增保存到剪切板</span><br><span class="line"><span class="built_in">cd</span> D:\Blog_my\blog_img\blogImg\img\<span class="variable">%folder%</span></span><br><span class="line"></span><br><span class="line">::读取当前文件夹的文件个数</span><br><span class="line"><span class="keyword">for</span> /f &quot;delims=&quot; <span class="variable">%%a</span> <span class="keyword">in</span> (&#x27;<span class="built_in">dir</span> /b ^| <span class="built_in">find</span> /v /c &quot;&amp;#@&quot;&#x27;) <span class="keyword">do</span> (</span><br><span class="line">  <span class="built_in">set</span> count=<span class="variable">%%a</span></span><br><span class="line">)</span><br><span class="line">::个数加<span class="number">1</span></span><br><span class="line"><span class="built_in">set</span>/a count+=<span class="number">1</span></span><br><span class="line">::<span class="built_in">echo</span> <span class="variable">%count%</span></span><br><span class="line"></span><br><span class="line">::文件重命名格式</span><br><span class="line"><span class="built_in">set</span> file=&quot;<span class="variable">%yy%</span><span class="variable">%mm%</span><span class="variable">%dd%</span>_<span class="variable">%count%</span>&quot;</span><br><span class="line">::文件去除空格</span><br><span class="line"><span class="built_in">set</span> &quot;file=%file: =%&quot;</span><br><span class="line">::<span class="built_in">echo</span> <span class="variable">%file%</span></span><br><span class="line"></span><br><span class="line">:: 保存到剪切板中</span><br><span class="line"><span class="built_in">set</span>/p=<span class="variable">%file%</span>&lt;<span class="built_in">nul</span> | clip</span><br><span class="line"></span><br><span class="line">::暂停，保持<span class="built_in">cmd</span>窗口，调试时方便信息查看，正常使用时可删除</span><br><span class="line">::<span class="built_in">pause</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h3 id="1-3-全部代码和总结"><a href="#1-3-全部代码和总结" class="headerlink" title="1.3 全部代码和总结"></a>1.3 全部代码和总结</h3><p>全部代码:<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">::关闭显示</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line">::显示本地时间格式</span><br><span class="line">::<span class="built_in">echo</span> <span class="variable">%date%</span></span><br><span class="line">::周日 <span class="number">2023</span>/<span class="number">01</span>/<span class="number">15</span></span><br><span class="line"></span><br><span class="line">::dd=日期</span><br><span class="line"><span class="built_in">set</span> dd=<span class="variable">%date:~11,2%</span>  </span><br><span class="line">::mm=月份</span><br><span class="line"><span class="built_in">set</span> mm=<span class="variable">%date:~8,2%</span></span><br><span class="line">::yy=年份</span><br><span class="line"><span class="built_in">set</span> yy=<span class="variable">%date:~3,4%</span></span><br><span class="line">::folder=年月日</span><br><span class="line"><span class="built_in">set</span> folder=&quot;<span class="variable">%yy%</span><span class="variable">%mm%</span><span class="variable">%dd%</span>&quot;</span><br><span class="line"><span class="built_in">set</span> &quot;folder=%folder: =%&quot;</span><br><span class="line"></span><br><span class="line">::创建文件夹</span><br><span class="line"><span class="built_in">md</span>  <span class="variable">%folder%</span></span><br><span class="line"></span><br><span class="line">::新增保存到剪切板</span><br><span class="line"><span class="built_in">cd</span> D:\Blog_my\blog_img\blogImg\img\<span class="variable">%folder%</span></span><br><span class="line"></span><br><span class="line">::读取当前文件夹的文件个数</span><br><span class="line"><span class="keyword">for</span> /f &quot;delims=&quot; <span class="variable">%%a</span> <span class="keyword">in</span> (&#x27;<span class="built_in">dir</span> /b ^| <span class="built_in">find</span> /v /c &quot;&amp;#@&quot;&#x27;) <span class="keyword">do</span> (</span><br><span class="line">  <span class="built_in">set</span> count=<span class="variable">%%a</span></span><br><span class="line">)</span><br><span class="line">::个数加<span class="number">1</span></span><br><span class="line"><span class="built_in">set</span>/a count+=<span class="number">1</span></span><br><span class="line">::<span class="built_in">echo</span> <span class="variable">%count%</span></span><br><span class="line"></span><br><span class="line">::文件重命名格式</span><br><span class="line"><span class="built_in">set</span> file=&quot;<span class="variable">%yy%</span><span class="variable">%mm%</span><span class="variable">%dd%</span>_<span class="variable">%count%</span>&quot;</span><br><span class="line">::文件去除空格</span><br><span class="line"><span class="built_in">set</span> &quot;file=%file: =%&quot;</span><br><span class="line">::<span class="built_in">echo</span> <span class="variable">%file%</span></span><br><span class="line"></span><br><span class="line">:: 保存到剪切板中</span><br><span class="line"><span class="built_in">set</span>/p=<span class="variable">%file%</span>&lt;<span class="built_in">nul</span> | clip</span><br><span class="line"></span><br><span class="line">::暂停，保持<span class="built_in">cmd</span>窗口，调试时方便信息查看，正常使用时可删除</span><br><span class="line">::<span class="built_in">pause</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><strong>总结</strong>:<br>不同电脑中时间格式有所不同,需要自己微调一下.</p><p>相关链接:<br><a href="https://blog.csdn.net/weixin_42985452/article/details/113789487">Windows批处理(cmd/bat)快速新建文件夹</a>.<br><a href="https://blog.51cto.com/lexsaints/5094214">Bat 去掉变量字符串中的空格</a>.<br><a href="https://blog.csdn.net/x_iya/article/details/51794178">批处理将字符串输出到Windows剪贴板</a>.</p><h2 id="2-bat实现git自动提交"><a href="#2-bat实现git自动提交" class="headerlink" title="2. bat实现git自动提交"></a>2. bat实现git自动提交</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">cd</span> D:\Blog_my\blog_img\blogImg</span><br><span class="line"></span><br><span class="line">:: git命令</span><br><span class="line">git add . </span><br><span class="line">git commit -m &quot;更新图片&quot;</span><br><span class="line">git push </span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><p>相比上一个,非常简单.</p><h2 id="3-bat实现hexo三连"><a href="#3-bat实现hexo三连" class="headerlink" title="3. bat实现hexo三连"></a>3. bat实现hexo三连</h2><p>本地三连:<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">cd</span> D:\Blog_my\blog_hexo</span><br><span class="line"></span><br><span class="line">:: hexo三连</span><br><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><br>上传三连:<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">cd</span> D:\Blog_my\blog_hexo</span><br><span class="line"></span><br><span class="line">:: hexo三连</span><br><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></p><h2 id="4-使用"><a href="#4-使用" class="headerlink" title="4. 使用"></a>4. 使用</h2><p>一般先使用<code>按日期新建文件夹.bat</code>创建文件夹 和 生成新文件名.<br>博客编写完后,使用<code>本地三连.bat</code>检查博客,然后使用<code>上传三连.bat</code>实现博客上传.<br>最后使用<code>blog自动提交脚本.bat</code>实现git上传到github中.</p><h2 id="5-改进1-bat文件集中"><a href="#5-改进1-bat文件集中" class="headerlink" title="5. 改进1: bat文件集中"></a>5. 改进1: bat文件集中</h2><p>由于不同的bat文件在不同的文件夹下,为了更加方便的使用bat命令,我将它们都放入同一文件夹下了.</p><p>因此,<u>bat文件需要加上切换目录命令!</u><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:: 切换目录</span><br><span class="line">cd /d D:\Blog_my\blog_img\blogImg</span><br></pre></td></tr></table></figure></p><p>改进效果:<br><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230125/20230125_12.jpg" alt="未加载图片" style="zoom:80%;" /></p><h2 id="6-改进2-添加默认值"><a href="#6-改进2-添加默认值" class="headerlink" title="6. 改进2: 添加默认值"></a>6. 改进2: 添加默认值</h2><p>上传图片默认commit为”更新图片”.<br>其他情况输入为准.</p><p>代码:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">set /p var=输入描述:</span><br><span class="line"></span><br><span class="line">if &quot;%var%&quot;==&quot;&quot; set var=更新图片</span><br><span class="line">echo %var%</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> bat脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>破解相关(供学习使用)</title>
      <link href="/2023/01/14/%E7%A0%B4%E8%A7%A3%E7%9B%B8%E5%85%B3-%E4%BE%9B%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/01/14/%E7%A0%B4%E8%A7%A3%E7%9B%B8%E5%85%B3-%E4%BE%9B%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>该方法来自于公众号 <span class='p red'>终码一生</span> .<br>该公众号提供 临时激活码 , 半永久激活码 以及正版授权 .</p></div><h2 id="pycharm破解过程"><a href="#pycharm破解过程" class="headerlink" title="pycharm破解过程"></a>pycharm破解过程</h2><p>在公众号中下载对应文件 <mark>jihuo-tool-2022.3.zip</mark>.</p><p>按照教程执行对应文件.(在scipts文件夹下)</p><p>激活成功结果:<br><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230114/1.jpg" title="截图展示" alt="未加载成功" style="zoom:80%;" /></p><p>虽然没有到永远,至少能一两年安心使用.</p><h2 id="idea破解过程"><a href="#idea破解过程" class="headerlink" title="idea破解过程"></a>idea破解过程</h2><p>链接: <a href="http://www.itzoo.net/idea/intellij-idea2021-3-latest-version-login-free-crack-patch-permanent-crack-free-tutorial-filter-agent.html">IntelliJ IDEA2021.3 最新版本 免登陆破解补丁 永久破解 免费教程</a>.<br>目前来看,网上最好的.</p><p><strong>1:</strong> 先进入idea<br>使用免费激活码: <a href="http://idea.94goo.com">http://idea.94goo.com</a></p><p><strong>2:</strong> 添加补丁文件<br>打开菜单栏Help -&gt; Edit Custom VM Options…,<br>开始添加附件中下载的filter-agent.jar.</p><p>网页提供的备用方案: <a href="http://blog.idejihuo.com/jetbrains/how-do-i-add-agent-configuration-if-the-activation-code-is-invalid.html">另一种添加补丁的方式</a></p><p>网站关联的公众号是: 终码一生.<br>idea版本是2021.2.1</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python打包</title>
      <link href="/2023/01/14/python%E6%89%93%E5%8C%85/"/>
      <url>/2023/01/14/python%E6%89%93%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>先跟着b站<a href="">视频</a>学习相关知识.</p></div><h2 id="1-exe打包"><a href="#1-exe打包" class="headerlink" title="1. exe打包"></a>1. exe打包</h2><h3 id="1-1-安装第三方库-Pyinstaller"><a href="#1-1-安装第三方库-Pyinstaller" class="headerlink" title="1.1 安装第三方库 Pyinstaller"></a>1.1 安装第三方库 Pyinstaller</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip/conda install pytinstaller</span><br></pre></td></tr></table></figure><p>注意事项:</p><ul><li>不可跨平台,但支持mac win</li><li>在虚拟环境下打包(避开不必要的三方库)</li></ul><h3 id="1-2-打包成多文件"><a href="#1-2-打包成多文件" class="headerlink" title="1.2 打包成多文件"></a>1.2 打包成多文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -D py文件</span><br></pre></td></tr></table></figure><p>生成的<code>dist</code>目录下是我们需要的东西.至于<code>*.spec</code>,<code>build</code>文件夹 都是过程产物.<br>dist下.exe文件是我们所需要的</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>spring5-day4</title>
      <link href="/2023/01/13/spring5-day4/"/>
      <url>/2023/01/13/spring5-day4/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>写文章基本大意</p></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>spring5-day3</title>
      <link href="/2023/01/13/spring5-day3/"/>
      <url>/2023/01/13/spring5-day3/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>写文章基本大意</p></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>spring5-day2</title>
      <link href="/2023/01/13/spring5-day2/"/>
      <url>/2023/01/13/spring5-day2/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>学习以下知识点:</p><ul><li>set注入</li><li>单例模式(singleton),原型模式(prototype)</li><li>自动装配</li><li>通过<code>@Autowired</code>注释实现自动装配</li></ul></div><h3 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h3><h4 id="1-构造器注入"><a href="#1-构造器注入" class="headerlink" title="1.构造器注入"></a>1.构造器注入</h4><p>前面已经说过了(默认无参,有参有三种方式)</p><h4 id="2-set注入-重点"><a href="#2-set注入-重点" class="headerlink" title="2.set注入[重点]"></a>2.set注入[<font color=#FF0000>重点</font>]</h4><ul><li>依赖: Bean对象的创建依赖于容器</li><li>注入: Bean对象中的所有属性,是由容器来注入的.</li></ul><p>环境:<br>复杂类型Student<br>路径:<code>/spring-study/spring-04-di</code><br>Student的相关属性:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 复杂的属性</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> Address address;</span><br><span class="line"><span class="keyword">private</span> String[] books;</span><br><span class="line"><span class="keyword">private</span> List&lt;String&gt; hobbys;</span><br><span class="line"><span class="keyword">private</span> Map&lt;String,String&gt; card;</span><br><span class="line"><span class="keyword">private</span> Set&lt;String&gt; game;</span><br><span class="line"><span class="keyword">private</span> Properties info;<span class="comment">// 配置类</span></span><br><span class="line"><span class="keyword">private</span> String wife; <span class="comment">//用于null赋值</span></span><br></pre></td></tr></table></figure><br>::: warning<br><strong>提示</strong><br>这些属性都要写对应的get,set方法<br>(没有set方法怎么set注入啊)<br>:::</p><p>不同类型对应的set注入代码:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Address&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">value</span>=<span class="string">&quot;中国&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--普通值注入: value--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xx&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Bean注入: ref--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;address&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 看了下面的就知道,上面的这两个算是简写了注入方式 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--数组注入: --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;books&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>西游记<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>三国演义<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>水浒传<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>jojo<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--List注入: --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobbys&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>听歌<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>看电影<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Map注入: --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--map的注入和上面两个又不同哦--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;身份证&quot;</span> <span class="attr">value</span>=<span class="string">&quot;124124&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;银行卡&quot;</span> <span class="attr">value</span>=<span class="string">&quot;124125124&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Set注入: --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;game&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>WeGame<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>QQ<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--特殊值注入--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--空值注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;wife&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">null</span>&gt;</span><span class="tag">&lt;/<span class="name">null</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--特殊类型:Properties的注入: --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;学号&quot;</span>&gt;</span>2352512421<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;生日&quot;</span>&gt;</span>2001-13-2<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;性别&quot;</span>&gt;</span>男性<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;username&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><br>很显然:</p><ul><li>==value注入和ref注入最常见==,所有就有简写方式.</li><li>List,Array,Set都是内部存一类值的,注入方式都相同</li><li>Map,Properties这两种==最特别==,所以注入的方式也不同(注:这两种相互之间也不同)</li><li>null值注入比较特殊哦,有一个专门的标签.</li></ul><p>这些注入方式都可以在官网找到相同的:<br><img src="/spring5-day2/1.jpg" alt="官网部分截图"></p><h4 id="p命名和c命名空间注入-扩展方式注入"><a href="#p命名和c命名空间注入-扩展方式注入" class="headerlink" title="p命名和c命名空间注入(扩展方式注入)"></a>p命名和c命名空间注入(扩展方式注入)</h4><p>这两种命名空间注入的使用需要在前面用到的<code>beans.xml</code>中加上对应的<strong>约束语句</strong>:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- p命名空间 --&gt;</span></span><br><span class="line">xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</span><br><span class="line"><span class="comment">&lt;!-- c命名空间 --&gt;</span></span><br><span class="line">xmlns:c=&quot;http://www.springframework.org/schema/c&quot;</span><br></pre></td></tr></table></figure><br>这个是要加在头部标签<code>beans</code>中的<br>就是这样的:<br><img src="/spring5-day2/2.jpg" alt="图片"></p><p>p命名空间的用法:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--p命名空间注入, 可以直接注入属性,p: property的简写--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--当然这种注入方式只能注入一些简单的东西.可以说是又偷了一波懒--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.User&quot;</span> <span class="attr">p:age</span>=<span class="string">&quot;18&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;xx&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><br>c命名空间的用法:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--c命名空间注入,通过构造器注入,c:constructs--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这个注入方式需要写对应的有参构造器.也算是对应的简化吧--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.User&quot;</span> <span class="attr">c:age</span>=<span class="string">&quot;19&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;xxx&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><p>::: tips<br><strong>新用法</strong><br><code>// 之前是这样强转的</code><br><code>Student student = (Student) context.getBean(&quot;student&quot;);</code></p><p><code>// 这里将要的类型传递进去了.用到了反射</code><br><code>User user = context.getBean(&quot;user&quot;,User.class);</code></p><p>:::</p><p>依赖注入就先讲到这里了.<br>看<a href="https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-dependencies">官方文档</a>就知道这里不止这点.<br><img src="/spring5-day2/3.jpg" alt="如图"></p><h3 id="bean的作用域"><a href="#bean的作用域" class="headerlink" title="bean的作用域"></a>bean的作用域</h3><p>官网资料:<br><img src="/spring5-day2/4.jpg" alt="bean作用域"><br><strong>在这里重点掌握前两个</strong><br>后面四个一看就知道是SpringMVC中的.</p><h4 id="singleton-单例模式"><a href="#singleton-单例模式" class="headerlink" title="singleton(单例模式)"></a>singleton(单例模式)</h4><p>官网给的描述图片:<br><img src="/spring5-day2/5.jpg" alt="singleton"><br>==单例模式是默认模式==.这一点之前在<code>bean.xml</code>配置讲解中就提过一次了.<br>xml配置:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;..&quot;</span> <span class="attr">class</span>=<span class="string">&quot;...&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;singleton&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="prototype-原型模式"><a href="#prototype-原型模式" class="headerlink" title="prototype(原型模式)"></a>prototype(原型模式)</h4><p>说白了就是==每次从容器中get时都会生成一个新对象.==<br>这一点和单例模式是相对的.<br>官网给的描述图片:<br><img src="/spring5-day2/6.jpg" alt="Prototype"></p><p>xml配置:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;..&quot;</span> <span class="attr">class</span>=<span class="string">&quot;...&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="其余的几个模式-request-session-application"><a href="#其余的几个模式-request-session-application" class="headerlink" title="其余的几个模式:request,session,application"></a>其余的几个模式:request,session,application</h4><p>这些只能在web开发中用到.<br>所以这里就不展示了.</p><h3 id="自动装配Bean"><a href="#自动装配Bean" class="headerlink" title="自动装配Bean"></a>自动装配Bean</h3><p><strong>自动装配是Spring满足bean依赖的一种方式</strong><br>Spring中有==三种装配的方式==:</p><ol><li>在<code>xml</code>中显式配置(前面一直用的)</li><li>在<code>java</code>中显式配置</li><li>隐式的自动装配bean[<font color=#FF0000>重点</font>]</li></ol><p>自动装配的路径:<code>/spring-study/spring-05-autowired</code></p><p>先配置好环境(和之前的一模一样)<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Cat&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Dog&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;people&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.People&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;xxx&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dog&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;cat&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="自动装配的两种方式"><a href="#自动装配的两种方式" class="headerlink" title="==自动装配的两种方式=="></a>==自动装配的两种方式==</h4><p><strong>byName</strong>:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--自动装配byName: 会自动在容器上下文中找和自己对象set方法后面值对应的bean id--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;people&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.People&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;xxx&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><br>byName就是根据bean的id来找的.<br>所以要保证所有的id唯一,并且这个bean需要和自动注入的属性的set方法的值一致.</p><p><strong>byType</strong>:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;people&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.People&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;xxx&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><br>byType就是根据对象属性类型相同的进行匹配.<br>如果相同Type有多个就会报错,所以要保证类型全局唯一,并且这个bean需要和自动注入的属性的类型一致.<br>不过byType可以省略id自动装配.(byName就不行)<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Cat&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Dog&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;people&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.People&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;xxx&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="使用注解实现自动装配"><a href="#使用注解实现自动装配" class="headerlink" title="使用注解实现自动装配"></a>使用注解实现自动装配</h4><p>是不是觉得上面两种方式还是有点麻烦.QvQ<br>现在在进行进一步简化.<br><em>Spring从2.5就支持注解了.</em><br>::: tips<br><strong>使用注解须知:</strong></p><ol><li>导入约束 contest约束<br><code>xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</code></li><li>配置注解的支持<br><code>&lt;context:annotation-config/&gt;</code><br>:::<br>官网给出的xml:<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开启注解支持 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>==和前面的xml还是有点差别的.==<br>在idea中可以在原先的基础上写上<code>&lt;context:annotation-config/&gt;</code>,idea会自动导入约束.</li></ol><p>路径:<code>/spring-study/spring-05-autowired</code><br>这里是直接修改前面的xml.</p><p>现在呢,在<code>beans.xml</code>的配置就非常的简洁了<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Cat&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Dog&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;people&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.People&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><br>然后在<code>people.class</code>中添加注释<code>@Autowired</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">People</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>==这里的<code>@Autowired</code>是先通过Type注入,后通过Name注入==</p><p>这个<code>@Autowired</code>非常的nice.内部是通过反射实现的.所以在<code>people</code>类中甚至<code>cat,dog</code>对应的set方法都可以省略掉.但是 <strong>官方推荐要有set方法</strong></p><h5 id="注释-Autowired的用法总结"><a href="#注释-Autowired的用法总结" class="headerlink" title="注释@Autowired的用法总结"></a>注释<code>@Autowired</code>的用法总结</h5><pre><code>直接在属性上使用即可,也支持在对应的set方法上使用使用@Autowired后可以不编写set方法,但官方推荐写上</code></pre><p><strong><code>@Autowired</code>先通过ByType进行装配,不成功再进行ByName装配</strong></p><p>==科普:==<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@Nullable 这个注解标记的字段可以为null</span><br><span class="line">这个注解好像只是为了绕过编译器.在运行过程中没有任何用处</span><br></pre></td></tr></table></figure><br>而在<code>@Autowired</code>源码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Autowired &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">required</span><span class="params">()</span> <span class="keyword">default</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>如果我们显式的定义<code>@Autowired</code>成这个样子:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired(required = false)</span></span><br><span class="line"><span class="keyword">private</span> Cat cat;</span><br></pre></td></tr></table></figure><br><strong>这样做即使是<code>@Autowired</code>找不到注入的对象也不会抛出异常</strong></p><p>未完待续…</p>]]></content>
      
      
      <categories>
          
          <category> SSM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring5-day1</title>
      <link href="/2023/01/12/spring5-day1/"/>
      <url>/2023/01/12/spring5-day1/</url>
      
        <content type="html"><![CDATA[<div class="note info simple"><p><strong>开新坑了~</strong>.<br>跟着狂神学习spring5<br><a href="https://www.bilibili.com/video/BV1WE411d7Dv?p=1">狂神b站视频</a></p></div><h2 id="1-spring5"><a href="#1-spring5" class="headerlink" title="1.spring5"></a>1.spring5</h2><h3 id="1-1-IOC理论推导"><a href="#1-1-IOC理论推导" class="headerlink" title="1.1 IOC理论推导"></a>1.1 IOC理论推导</h3><p>路径:<code>spring-study/spring-01-ioc1</code></p><p>在UserServiceImpl中,我们是直接写死了这句话<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br></pre></td></tr></table></figure><br>很显然,如果用户需求改变了,我们就要回到这里修改这句话.</p><p>现在我们多写了一个set方法:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 利用set来实现动态值注入</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserDao</span><span class="params">(UserDao userDao)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>这样在用户层面就可以自己动态选择自己想要的接口.</p><p><strong>这点转变,就是IOC的思想的体现.</strong><br><mark>这种思想,本质上解决了问题,程序员不用再去管理对象的创建了.</mark><br>系统的耦合性大大降低,人员可以更加专注在业务的实现了.</p><p>::: warning<br><strong>提示</strong><br>注意:上面的例子只是用来说明IOC思想.<br>:::</p><p>思想图示:<br><img src="/spring5-day1/1.png" alt="IOC"></p><p>总结:<br>    控制反转是一种通过描述(XMIL或注解)并通过第三方去生产或获取特定对象的方式.<br>    在Spring中实现控制反转的是IoC容器,其实现方式是依赖注入(DI).</p><h3 id="1-2-HelloSpring编写"><a href="#1-2-HelloSpring编写" class="headerlink" title="1.2 HelloSpring编写"></a>1.2 HelloSpring编写</h3><p>路径:<code>spring-study/spring-02-hellospring</code></p><h4 id="1-2-1先编写一个简单的pojo类"><a href="#1-2-1先编写一个简单的pojo类" class="headerlink" title="1.2.1先编写一个简单的pojo类:"></a>1.2.1先编写一个简单的pojo类:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.li.pojo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> IH</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/5/10 21:38</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String str;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getStr</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStr</span><span class="params">(String str)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.str = str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;str=&#x27;&quot;</span> + str + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-2-配置spring相关的元数据"><a href="#1-2-2-配置spring相关的元数据" class="headerlink" title="1.2.2 配置spring相关的元数据"></a>1.2.2 配置spring相关的元数据</h4><p>在resources下新建一个<code>beans.xml</code><br>在<a href="https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-factory-metadata">官网</a>上拷贝以下内容进去<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;...&quot;</span> <span class="attr">class</span>=<span class="string">&quot;...&quot;</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- collaborators and configuration for this bean go here --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;...&quot;</span> <span class="attr">class</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- collaborators and configuration for this bean go here --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- more bean definitions go here --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><br>==平时的时候可以直接这样创建:==<br><img src="/spring5-day1/2.jpg" alt="spring的xml"></p><h4 id="3-修改beans-xml"><a href="#3-修改beans-xml" class="headerlink" title="3.修改beans.xml"></a>3.修改<code>beans.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--使用Spring来创建对象,在Spring中,这些都被称为Bean--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Hello&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;str&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Spring&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-编写对应的用户代码"><a href="#4-编写对应的用户代码" class="headerlink" title="4.编写对应的用户代码"></a>4.编写对应的用户代码</h4><p>官网提供了spring对应的实例化容器的代码:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;services.xml&quot;</span>, <span class="string">&quot;daos.xml&quot;</span>);</span><br></pre></td></tr></table></figure><br>很显然这里我们没有这两个文件<code>&quot;services.xml&quot;, &quot;daos.xml&quot;</code>.所以替换成<code>beans.xml</code>就可以了.<br>这句话的意义: 获取spring的上下文对象.<br>有什么用呢:如果我们要去使用beans中的对象,直接从<code>context</code>中取出来就可以了.<br>就像这样:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Hello</span> <span class="variable">hello</span> <span class="operator">=</span> (Hello)context.getBean(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">hello.toString();</span><br></pre></td></tr></table></figure><br>这里就很明显可以看出<strong>控制反转</strong>的过程:</p><pre><code>hello对象是由Spring创建-&gt;看beans.xml中的bean标签就知道hello对象的属性也是由Spring容器设置的-&gt;bean标签下的property.</code></pre><blockquote><p>==提示:==<br>property中不仅可以用 value来指定<strong>基本数据类型</strong><br>还可以通过ref来引用Spring容器中创建好的<strong>对象</strong></p></blockquote><p>在视频5中,还将spring-01-ioc1修改成spring了.</p><p><strong>理解</strong>:</p><pre><code>我们彻底不用去程序中修改代码,要实现不同的操作,只需要在xml配置信息中进行修改.所谓的IoC:一句话: 对象由Spring来创建,管理,装配!</code></pre><h3 id="Spring-Bean参数的三种注入方式"><a href="#Spring-Bean参数的三种注入方式" class="headerlink" title="Spring Bean参数的三种注入方式"></a>Spring Bean参数的三种注入方式</h3><p>路径:<code>spring-study/spring-03-ioc2</code></p><p><strong>默认</strong>为==使用无参构造创建对象==.</p><p>如果要想使用有参构造呢?<br>官网提供了三种方式:</p><ol><li><p>通过参数下标赋值的方式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xx&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>:这里的下标是从<strong>0开始的</strong>.</p></li><li><p>通过参数的类型进行赋值</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xx&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>:<br>a.基本类型可以直接写,像String这样的==引用类型就要用全限定名==.<br>b.如果类型相同,就按照顺序来赋值.  </p></li><li><p>直接通过参数名(用的最爽)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xx&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>==另一个知识点:==<br>所有在<code>beans.xml</code>中注册过的对象.<br>在代码执行到<code>new ClassPathXmlApplicationContext(&quot;beans.xml&quot;);</code>时,都<strong>在容器中创建了一份,且仅一份</strong>.</p><h3 id="Spring-bean-xml的配置"><a href="#Spring-bean-xml的配置" class="headerlink" title="Spring bean.xml的配置"></a>Spring bean.xml的配置</h3><p>路径:<code>spring-study/spring-03-ioc2</code></p><h4 id="1-别名-alias"><a href="#1-别名-alias" class="headerlink" title="1.别名(alias)"></a>1.别名(alias)</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;userNew&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>添加了别名,就也可以通过别名来获取这个对象.<br>一对一的</p><h4 id="2-Bean的配置"><a href="#2-Bean的配置" class="headerlink" title="2.Bean的配置"></a>2.Bean的配置</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">id: bean 的唯一标识符. 相当于我们学的对象名</span></span><br><span class="line"><span class="comment">class: bean 对象所对应的全限定名</span></span><br><span class="line"><span class="comment">name: 也是别名,而且可以取多个别名,而且可以用很多种分割符号(完虐alias)</span></span><br><span class="line"><span class="comment">...</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.User&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user2 u3,s3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;李辉&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-import-团队"><a href="#3-import-团队" class="headerlink" title="3.import(团队)"></a>3.import(团队)</h4><p>import用于<strong>团队开发</strong>.它可以将多个配置文件,导入合并成为一个总配置.</p><p>这个就不演示了.</p><p>配置讲完了,很显然这只是表象,不然Spring也就不配称为”配置炼狱”.</p>]]></content>
      
      
      <categories>
          
          <category> SSM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔记布局要求</title>
      <link href="/2023/01/12/%E7%AC%94%E8%AE%B0%E5%B8%83%E5%B1%80%E8%A6%81%E6%B1%82%E4%BB%A5%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%A0%BC%E5%BC%8F/"/>
      <url>/2023/01/12/%E7%AC%94%E8%AE%B0%E5%B8%83%E5%B1%80%E8%A6%81%E6%B1%82%E4%BB%A5%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%A0%BC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>记录各种笔记的格式要求.<br>一般追求简单,实用.<br>写在这是为了防止忘记.</p></div><div class="note warning flat"><p>本文用于记录个人笔记习惯,仅供参考.</p></div><h4 id="1-1-OneNote格式要求"><a href="#1-1-OneNote格式要求" class="headerlink" title="1.1 OneNote格式要求"></a>1.1 OneNote格式要求</h4><ol><li>页面大标题 华文中宋 28</li><li>分块大标题 华文中宋 24</li><li>分块小标题 黑体 16,18左右</li><li>正文 黑体 14</li></ol><p>常用标记有 <mark>高亮文字</mark> <u>下划线</u> <strong>加重</strong> 三种.<br>中文和英文之间加空格<br><div class="note blue no-icon flat"><p>为了整体美观,某些正文也会加到16,18左右.</p></div></p>]]></content>
      
      
      <categories>
          
          <category> 格式要求 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 习惯 </tag>
            
            <tag> 模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客美化(一)</title>
      <link href="/2023/01/11/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96-%E4%B8%80/"/>
      <url>/2023/01/11/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>完成Hexo博客的再搭建,跟着<a href="https://www.fomal.cc/">Fomalhaut🥝</a>大神成功魔改自己的博客首页.</p></div><h2 id="1-美化进度报告"><a href="#1-美化进度报告" class="headerlink" title="1.美化进度报告"></a>1.美化进度报告</h2><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>文章置顶滚动栏(店长)</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>外挂标签的引入（店长）</p>            </div><p>有了外挂标签,支持非常多的文章样式</p><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>按键防抖</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>Vue + Element样式弹窗</p>            </div><p>配合按键防抖=&gt; 不同按键出现不同反应(复制弹窗)</p><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>配置手机PC页面白天黑夜共四个背景图(店长)</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>PDF 插件安装</p>            </div><p>我这需要将 ejs 升级到 2.5.5以上</p><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>宽屏适配</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>文章三栏(需要微调)</p>            </div><p>使用文章三栏不可使用 文章双侧栏显示(小冰) </p><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>右边按钮阅读进度（Leonus）</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>直达底部按钮</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>文章页顶部波浪线</p>            </div><p>完成了,还未微调 css 中<code>fill</code>属性.感觉有点突兀</p><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>白天雪花特效</p>            </div><p>个人感觉要去找更钟意的下落特效</p><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>导航栏魔改增强版(LYX)</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>页面样式调节</p>            </div><p>页面要经常调节</p><h2 id="阶段性总结一-23-1-13"><a href="#阶段性总结一-23-1-13" class="headerlink" title="阶段性总结一 23/1/13"></a>阶段性总结一 23/1/13</h2><p>页面配置在我连续两天摸着大佬<a href="https://www.fomal.cc/">Fomalhaut🥝</a>文章终于算的上是看的过去了.</p><p>待解决问题:</p><ul><li>字体字号</li><li>文章置顶滚动栏(我希望是横向滚动的)</li><li>首页分类磁贴(小冰)安装</li><li>右侧功能栏 更加丰富一些</li><li>阅读模式</li><li>其他页面的配置</li></ul><p>等下次有机会再进一步修改吧!</p>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 页面美化 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
