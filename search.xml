<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>test使用</title>
      <link href="/2023/01/12/test%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/01/12/test%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>美化主题</p></div><p>在前面的话</p><h1 id="和"><a href="#和" class="headerlink" title="和"></a>和</h1><h2 id="好"><a href="#好" class="headerlink" title="好"></a>好</h2><h3 id="还"><a href="#还" class="headerlink" title="还"></a>还</h3><h4 id="会"><a href="#会" class="headerlink" title="会"></a>会</h4><p><strong>会</strong><br><mark>高亮</mark></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>spring5-day1</title>
      <link href="/2023/01/12/spring5-day1/"/>
      <url>/2023/01/12/spring5-day1/</url>
      
        <content type="html"><![CDATA[<div class="note info simple"><p><strong>开新坑了~</strong>.<br>跟着狂神学习spring5<br><a href="https://www.bilibili.com/video/BV1WE411d7Dv?p=1">狂神b站视频</a></p></div><h2 id="1-spring5"><a href="#1-spring5" class="headerlink" title="1.spring5"></a>1.spring5</h2><h3 id="1-1-IOC理论推导"><a href="#1-1-IOC理论推导" class="headerlink" title="1.1 IOC理论推导"></a>1.1 IOC理论推导</h3><p>路径:<code>spring-study/spring-01-ioc1</code></p><p>在UserServiceImpl中,我们是直接写死了这句话<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br></pre></td></tr></table></figure><br>很显然,如果用户需求改变了,我们就要回到这里修改这句话.</p><p>现在我们多写了一个set方法:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 利用set来实现动态值注入</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserDao</span><span class="params">(UserDao userDao)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>这样在用户层面就可以自己动态选择自己想要的接口.</p><p><strong>这点转变,就是IOC的思想的体现.</strong><br><mark>这种思想,本质上解决了问题,程序员不用再去管理对象的创建了.</mark><br>系统的耦合性大大降低,人员可以更加专注在业务的实现了.</p><p>::: warning<br><strong>提示</strong><br>注意:上面的例子只是用来说明IOC思想.<br>:::</p><p>思想图示:<br><img src="/spring5-day1/1.png" alt="IOC"></p><p>总结:<br>    控制反转是一种通过描述(XMIL或注解)并通过第三方去生产或获取特定对象的方式.<br>    在Spring中实现控制反转的是IoC容器,其实现方式是依赖注入(DI).</p><h3 id="1-2-HelloSpring编写"><a href="#1-2-HelloSpring编写" class="headerlink" title="1.2 HelloSpring编写"></a>1.2 HelloSpring编写</h3><p>路径:<code>spring-study/spring-02-hellospring</code></p><h4 id="1-2-1先编写一个简单的pojo类"><a href="#1-2-1先编写一个简单的pojo类" class="headerlink" title="1.2.1先编写一个简单的pojo类:"></a>1.2.1先编写一个简单的pojo类:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.li.pojo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> IH</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/5/10 21:38</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String str;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getStr</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStr</span><span class="params">(String str)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.str = str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;str=&#x27;&quot;</span> + str + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-2-配置spring相关的元数据"><a href="#1-2-2-配置spring相关的元数据" class="headerlink" title="1.2.2 配置spring相关的元数据"></a>1.2.2 配置spring相关的元数据</h4><p>在resources下新建一个<code>beans.xml</code><br>在<a href="https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-factory-metadata">官网</a>上拷贝以下内容进去<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;...&quot;</span> <span class="attr">class</span>=<span class="string">&quot;...&quot;</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- collaborators and configuration for this bean go here --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;...&quot;</span> <span class="attr">class</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- collaborators and configuration for this bean go here --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- more bean definitions go here --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><br>==平时的时候可以直接这样创建:==<br><img src="/spring5-day1/2.jpg" alt="spring的xml"></p><h4 id="3-修改beans-xml"><a href="#3-修改beans-xml" class="headerlink" title="3.修改beans.xml"></a>3.修改<code>beans.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--使用Spring来创建对象,在Spring中,这些都被称为Bean--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Hello&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;str&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Spring&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-编写对应的用户代码"><a href="#4-编写对应的用户代码" class="headerlink" title="4.编写对应的用户代码"></a>4.编写对应的用户代码</h4><p>官网提供了spring对应的实例化容器的代码:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;services.xml&quot;</span>, <span class="string">&quot;daos.xml&quot;</span>);</span><br></pre></td></tr></table></figure><br>很显然这里我们没有这两个文件<code>&quot;services.xml&quot;, &quot;daos.xml&quot;</code>.所以替换成<code>beans.xml</code>就可以了.<br>这句话的意义: 获取spring的上下文对象.<br>有什么用呢:如果我们要去使用beans中的对象,直接从<code>context</code>中取出来就可以了.<br>就像这样:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Hello</span> <span class="variable">hello</span> <span class="operator">=</span> (Hello)context.getBean(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">hello.toString();</span><br></pre></td></tr></table></figure><br>这里就很明显可以看出<strong>控制反转</strong>的过程:</p><pre><code>hello对象是由Spring创建-&gt;看beans.xml中的bean标签就知道hello对象的属性也是由Spring容器设置的-&gt;bean标签下的property.</code></pre><blockquote><p>==提示:==<br>property中不仅可以用 value来指定<strong>基本数据类型</strong><br>还可以通过ref来引用Spring容器中创建好的<strong>对象</strong></p></blockquote><p>在视频5中,还将spring-01-ioc1修改成spring了.</p><p><strong>理解</strong>:</p><pre><code>我们彻底不用去程序中修改代码,要实现不同的操作,只需要在xml配置信息中进行修改.所谓的IoC:一句话: 对象由Spring来创建,管理,装配!</code></pre><h3 id="Spring-Bean参数的三种注入方式"><a href="#Spring-Bean参数的三种注入方式" class="headerlink" title="Spring Bean参数的三种注入方式"></a>Spring Bean参数的三种注入方式</h3><p>路径:<code>spring-study/spring-03-ioc2</code></p><p><strong>默认</strong>为==使用无参构造创建对象==.</p><p>如果要想使用有参构造呢?<br>官网提供了三种方式:</p><ol><li><p>通过参数下标赋值的方式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xx&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>:这里的下标是从<strong>0开始的</strong>.</p></li><li><p>通过参数的类型进行赋值</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xx&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>:<br>a.基本类型可以直接写,像String这样的==引用类型就要用全限定名==.<br>b.如果类型相同,就按照顺序来赋值.  </p></li><li><p>直接通过参数名(用的最爽)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xx&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>==另一个知识点:==<br>所有在<code>beans.xml</code>中注册过的对象.<br>在代码执行到<code>new ClassPathXmlApplicationContext(&quot;beans.xml&quot;);</code>时,都<strong>在容器中创建了一份,且仅一份</strong>.</p><h3 id="Spring-bean-xml的配置"><a href="#Spring-bean-xml的配置" class="headerlink" title="Spring bean.xml的配置"></a>Spring bean.xml的配置</h3><p>路径:<code>spring-study/spring-03-ioc2</code></p><h4 id="1-别名-alias"><a href="#1-别名-alias" class="headerlink" title="1.别名(alias)"></a>1.别名(alias)</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;userNew&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>添加了别名,就也可以通过别名来获取这个对象.<br>一对一的</p><h4 id="2-Bean的配置"><a href="#2-Bean的配置" class="headerlink" title="2.Bean的配置"></a>2.Bean的配置</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">id: bean 的唯一标识符. 相当于我们学的对象名</span></span><br><span class="line"><span class="comment">class: bean 对象所对应的全限定名</span></span><br><span class="line"><span class="comment">name: 也是别名,而且可以取多个别名,而且可以用很多种分割符号(完虐alias)</span></span><br><span class="line"><span class="comment">...</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.User&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user2 u3,s3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;李辉&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-import-团队"><a href="#3-import-团队" class="headerlink" title="3.import(团队)"></a>3.import(团队)</h4><p>import用于<strong>团队开发</strong>.它可以将多个配置文件,导入合并成为一个总配置.</p><p>这个就不演示了.</p><p>配置讲完了,很显然这只是表象,不然Spring也就不配称为”配置炼狱”.</p>]]></content>
      
      
      <categories>
          
          <category> SSM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔记布局要求以及常用格式</title>
      <link href="/2023/01/12/%E7%AC%94%E8%AE%B0%E5%B8%83%E5%B1%80%E8%A6%81%E6%B1%82%E4%BB%A5%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%A0%BC%E5%BC%8F/"/>
      <url>/2023/01/12/%E7%AC%94%E8%AE%B0%E5%B8%83%E5%B1%80%E8%A6%81%E6%B1%82%E4%BB%A5%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%A0%BC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<div class="note warning flat"><p>本文用于记录个人笔记习惯,仅供参考.</p></div><h2 id="1-笔记格式要求"><a href="#1-笔记格式要求" class="headerlink" title="1.笔记格式要求"></a>1.笔记格式要求</h2><p>不同笔记的格式要求不同哦!</p><h4 id="1-1-OneNote格式要求"><a href="#1-1-OneNote格式要求" class="headerlink" title="1.1 OneNote格式要求"></a>1.1 OneNote格式要求</h4><ol><li>页面大标题 华文中宋 28</li><li>分块大标题 华文中宋 24</li><li>分块小标题 黑体 16,18左右</li><li>正文 黑体 14</li></ol><p>常用标记有 <mark>高亮文字</mark> <u>下划线</u> <strong>加重</strong> 三种.<br>中文和英文之间加空格<br><div class="note blue no-icon flat"><p>为了整体美观,某些正文也会加到16,18左右</p></div></p><h2 id="2-常用的Makedown格式"><a href="#2-常用的Makedown格式" class="headerlink" title="2.常用的Makedown格式"></a>2.常用的Makedown格式</h2><h4 id="2-1-文字样式"><a href="#2-1-文字样式" class="headerlink" title="2.1 文字样式"></a>2.1 文字样式</h4><p>语法<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>自带下划线<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"><span class="strong">**自带加粗**</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">mark</span>&gt;</span></span>自带高亮<span class="language-xml"><span class="tag">&lt;/<span class="name">mark</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>= <span class="string">4</span>&gt;</span></span>4号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">red</span>&gt;</span></span>红色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="section"># 外挂标签</span></span><br><span class="line">带&#123;%u 下划线 %&#125; 文本</span><br><span class="line">带&#123;%emp 着重号 %&#125; 文本</span><br><span class="line">带&#123;%wavy 波浪线 %&#125; 文本</span><br><span class="line">&#123;% span red, 红色字 %&#125;</span><br><span class="line">&#123;% span center, 居中显示 %&#125;</span><br></pre></td></tr></table></figure><br>运行结果:<br><u>自带下划线</u><br><strong>自带加粗</strong></p><p><mark>自带高亮</mark></p><font size= 4>4号字</font><font color=red>红色</font><p>带<u>下划线</u> 文本<br>带<emp>着重号</emp> 文本<br>带<wavy>波浪线</wavy> 文本<br><span class='p red'>红色字</span><br><span class='p center'>居中显示</span></p><h4 id="2-2-提示部分"><a href="#2-2-提示部分" class="headerlink" title="2.2 提示部分"></a>2.2 提示部分</h4><p>1.自带icon<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># flat 样式</span></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><br><div class="note info flat"><p>info 提示块标签</p></div></p><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># no-icon 样式</span></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div><p>2.外部icon<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># no-icon 模式 可自定义颜色</span></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><br><div class="note blue no-icon flat"><p>2021年快到了….</p></div></p><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div><h4 id="2-3-其他类型"><a href="#2-3-其他类型" class="headerlink" title="2.3 其他类型"></a>2.3 其他类型</h4><p>图片:<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure></p><p>分割线:<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure></p><p>节选自<a href="https://www.fomal.cc/posts/2013454d.html">Markdown语法与外挂标签写法汇总</a>.</p>]]></content>
      
      
      <categories>
          
          <category> 格式要求 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 习惯 </tag>
            
            <tag> 模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客美化(一)</title>
      <link href="/2023/01/11/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96-%E4%B8%80/"/>
      <url>/2023/01/11/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>完成Hexo博客的再搭建,跟着<a href="https://www.fomal.cc/">Fomalhaut🥝</a>大神一步一步魔改自己的博客.</p></div><h2 id="1-美化进度报告"><a href="#1-美化进度报告" class="headerlink" title="1.美化进度报告"></a>1.美化进度报告</h2><ul><li></li><li>文章置顶滚动栏(店长)</li><li>外挂标签的引入（店长）</li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 页面美化 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
