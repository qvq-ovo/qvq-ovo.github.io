<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Acwing单调队列</title>
      <link href="/2023/03/22/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek2/Acwing%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/"/>
      <url>/2023/03/22/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek2/Acwing%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><font size=4><b>前言📝</b></font><br>单调队列. 属于队列中的一种.<br>单调队列的应用比较狭隘.<br>但如果不能识别出来使用单调队列的话,题目难度就上去了.</p></div><h2 id="299-裁剪序列"><a href="#299-裁剪序列" class="headerlink" title="299. 裁剪序列"></a>299. 裁剪序列</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230322/20230322_3.jpg" alt="裁剪序列"></p><div class="note info no-icon flat"><p>怎么说呢,上来王炸.<br>单调队列只是这道题的一小部分.<br>碰到这样的,最多看一眼.</p></div><h2 id="154-滑动窗口"><a href="#154-滑动窗口" class="headerlink" title="154. 滑动窗口"></a>154. 滑动窗口</h2><p><strong>非常经典的一道题.</strong>同时维护最大值,最小值.</p><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230322/20230322_4.jpg" alt="滑动窗口"></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日一题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Acwing哈希</title>
      <link href="/2023/03/22/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek2/Acwing%E5%93%88%E5%B8%8C/"/>
      <url>/2023/03/22/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek2/Acwing%E5%93%88%E5%B8%8C/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><font size=4><b>前言📝</b></font><br>哈希.神一般的数据结构.<br>我的建议是,能用系统提供的就用系统提供的.</p></div><h2 id="2058-笨拙的手指"><a href="#2058-笨拙的手指" class="headerlink" title="2058. 笨拙的手指"></a>2058. 笨拙的手指</h2><div class="note warning no-icon flat"><p>这道题还是有点难度的,不过难的不在哈希.<br>而是在进制的转换.</p></div><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230322/20230322_1.jpg" alt="笨拙的手指"></p><p>看完直接模拟.不过这里的进制转化有点困难.</p><p>值得注意的一点,这里用到一个以后也会很常用的算法:<br><div class="note info no-icon flat"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将 b 进制下 s 转换成十进制下的数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">base</span><span class="params">(string s,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">  <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span>&amp; c : s)</span><br><span class="line">    res  = res * b + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div></p><p>但这题还是有的陷阱的.<br>比如这个数据:<code>1110 \n 220</code>.<br>在漏写情况下可以是<code>0110  020</code>,这样就找的结果6.但这是不对的.<br><span class='p red'>题目中明确说了:只会写错</span>.因此必须特判前导零.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;unordered_set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 b 进制下 s 转换成十进制下的数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">base</span><span class="params">(string s,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span>&amp; c : s)</span><br><span class="line">        res  = res * b + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    unordered_set&lt;<span class="type">int</span>&gt; set;</span><br><span class="line">    string x,y;</span><br><span class="line">    cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>,len = x.<span class="built_in">size</span>();i &lt; len;i ++)&#123;</span><br><span class="line">        string s = x;</span><br><span class="line">        s[i] ^= <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(len &amp;&amp; s[<span class="number">0</span>] == <span class="string">&#x27;0&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">        set.<span class="built_in">insert</span>(<span class="built_in">base</span>(s,<span class="number">2</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>,len = y.<span class="built_in">size</span>();i &lt; len;i ++)&#123;</span><br><span class="line">        string s = y;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">3</span>;j ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] - <span class="string">&#x27;0&#x27;</span> != j)&#123;</span><br><span class="line">                s[i] = <span class="string">&#x27;0&#x27;</span> + j;</span><br><span class="line">                <span class="keyword">if</span>(len &amp;&amp; s[<span class="number">0</span>] == <span class="string">&#x27;0&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="type">int</span> n = <span class="built_in">base</span>(s,<span class="number">3</span>);</span><br><span class="line">                <span class="keyword">if</span>(set.<span class="built_in">count</span>(n))&#123;</span><br><span class="line">                    cout&lt;&lt;n&lt;&lt;endl;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="841-字符串哈希"><a href="#841-字符串哈希" class="headerlink" title="841. 字符串哈希"></a>841. 字符串哈希</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230322/20230322_2.jpg" alt="字符串哈希"></p><p>哈希另外一个经典应用: <strong>字符串哈希</strong></p><p>字符串哈希利用了前缀和知识.<br>先选择一个比较大的质数(比如<code>131</code>,或者<code>13331</code>),同时将数据类型开到最大<code>unsigned long long</code>.<br>然后使用前缀和思想构造哈希数组.</p><p>具体处理代码如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> P = <span class="number">131</span>,N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"></span><br><span class="line">ull p[N],ha[N];</span><br><span class="line"><span class="type">char</span> s[N]; <span class="comment">// 输入从1开始</span></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</span><br><span class="line">    p[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)&#123;</span><br><span class="line">        ha[i] = ha[i - <span class="number">1</span>] * P + s[i];</span><br><span class="line">        p[i] = p[i - <span class="number">1</span>] * P;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ull <span class="title">get</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ha[r] - ha[l] * p[r - l + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>本题全部代码:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> P = <span class="number">131</span>,N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"></span><br><span class="line">ull p[N],ha[N];</span><br><span class="line"><span class="type">char</span> s[N]; <span class="comment">// 输入从1开始</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    cin&gt;&gt;s +<span class="number">1</span>;</span><br><span class="line">    p[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)&#123;</span><br><span class="line">        ha[i] = ha[i - <span class="number">1</span>] * P + s[i];</span><br><span class="line">        p[i] = p[i - <span class="number">1</span>] * P;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> x,y,a,b;</span><br><span class="line">    <span class="keyword">while</span>(m --)&#123;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        ull t1 = ha[y] - ha[x - <span class="number">1</span>] * p[y - x + <span class="number">1</span>];</span><br><span class="line">        ull t2 = ha[b] - ha[a - <span class="number">1</span>] * p[b - a + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(t1 == t2) cout&lt;&lt;<span class="string">&quot;Yes&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;No&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>哈希很好用的.有时候需要使用数字代替名字时,一般我们就是开一个哈希表来记录两者之间的关系.(在今天的比赛中遇见老多了).</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日一题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Acwing并查集</title>
      <link href="/2023/03/21/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek2/Acwing%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
      <url>/2023/03/21/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek2/Acwing%E5%B9%B6%E6%9F%A5%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><font size=4><b>前言📝</b></font><br>并查集: 一种快速判断两者关系的结构.<br>当题目需要多次询问不同两者之间的关系时使用.<br>一般想到使用并查集后,题目难度就下降一个等级.</p></div><h2 id="240-食物链"><a href="#240-食物链" class="headerlink" title="240. 食物链"></a>240. 食物链</h2><p><strong>这道题算的上是将并查集藏得比较深的.</strong><br><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230321/20230321_4.jpg" alt="食物链"></p><p>核心: <mark>并查集 + 集内与根节点的距离</mark><br>另外类似的一题:<br><a href="https://www.acwing.com/problem/content/839/">837. 连通块中点的数量</a>核心: <mark>并查集 + 集合点总数</mark></p><p>这道题需要对 并查集核心函数 进行部分修改.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p[x] != x)&#123;</span><br><span class="line">        <span class="comment">// 求父</span></span><br><span class="line">        <span class="type">int</span> t = <span class="built_in">find</span>(p[x]);</span><br><span class="line">        <span class="comment">// 求距离</span></span><br><span class="line">        eat[x] += eat[p[x]];</span><br><span class="line">        p[x] = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p[x];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>本题全部代码</strong>:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">50010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> p[N],d[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x != p[x])&#123;</span><br><span class="line">        <span class="type">int</span> t = <span class="built_in">find</span>(p[x]);</span><br><span class="line">        d[x] += d[p[x]];</span><br><span class="line">        p[x] = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++) p[i] = i;</span><br><span class="line">    <span class="type">int</span> op,a,b;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(m --)&#123;</span><br><span class="line">        cin&gt;&gt;op&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="type">int</span> pa = <span class="built_in">find</span>(a),pb = <span class="built_in">find</span>(b);</span><br><span class="line">        <span class="keyword">if</span>(a &gt; n || b &gt; n) res ++;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(pa == pb &amp;&amp; (d[a] - d[b]) % <span class="number">3</span>) res ++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(pa != pb)&#123;</span><br><span class="line">                    p[pa] = pb;</span><br><span class="line">                    d[pa] = d[b] - d[a];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(pa == pb &amp;&amp; (d[b] - d[a] - <span class="number">1</span>)%<span class="number">3</span>) res ++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(pa != pb)&#123;</span><br><span class="line">                    p[pa] = pb;</span><br><span class="line">                    d[pa] = d[b] - <span class="number">1</span> - d[a];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>本道题对并查集的运用可以说是非常的到位.</p><h2 id="238-银河英雄传说"><a href="#238-银河英雄传说" class="headerlink" title="238. 银河英雄传说"></a>238. 银河英雄传说</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230321/20230321_5.jpg" alt="银河英雄传说"></p><div class="note success no-icon flat"><p>没活了,整个大杂烩.<br>就是将前面两个辅助数组全部都用上就行了.</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">30010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> p[N], d[N],cnt[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p[x] != x)&#123;</span><br><span class="line">        <span class="type">int</span> t = <span class="built_in">find</span>(p[x]);</span><br><span class="line">        d[x] += d[p[x]];</span><br><span class="line">        p[x] = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt; N;i ++)&#123;</span><br><span class="line">        p[i] = i;</span><br><span class="line">        cnt[i] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="type">char</span> op[<span class="number">2</span>];</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    <span class="keyword">while</span>(t --)&#123;</span><br><span class="line">        cin&gt;&gt;op&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="type">int</span> pa = <span class="built_in">find</span>(a),pb = <span class="built_in">find</span>(b);</span><br><span class="line">        <span class="keyword">if</span>(op[<span class="number">0</span>] == <span class="string">&#x27;M&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(pa != pb)&#123;</span><br><span class="line">                p[pa] = pb;</span><br><span class="line">                <span class="comment">// 距离赋值 恰好是 原集合的大小</span></span><br><span class="line">                d[pa] = cnt[pb];</span><br><span class="line">                cnt[pb] += cnt[pa];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(pa != pb) cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">            <span class="comment">// 必须特判列的头节点</span></span><br><span class="line">            <span class="keyword">else</span> cout&lt;&lt;<span class="built_in">max</span>(<span class="number">0</span>,<span class="built_in">abs</span>(d[a] - d[b]) - <span class="number">1</span>)&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>写完今天的题目,可以看出并查集一共就两个附加操作.<br>虽然简单,但并不影响并查集的强大.</p></div>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日一题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Acwing递归</title>
      <link href="/2023/03/21/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek2/Acwing%E9%80%92%E5%BD%92/"/>
      <url>/2023/03/21/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek2/Acwing%E9%80%92%E5%BD%92/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>递归的代表: dfs.<br>递归核心: 递归函数的含义.</p></div><h2 id="1497-树的遍历"><a href="#1497-树的遍历" class="headerlink" title="1497. 树的遍历"></a>1497. 树的遍历</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230321/20230321_1.jpg" alt="树的遍历"></p><div class="note success no-icon flat"><p>如果叫我手动模拟的话,非常的简单.<br>但要我教程序的话,非常的困难.</p></div><div class="note danger no-icon flat"><p>y总说:<br>这个题目非常非常的经典.一定要背过.<br>注意这道题中: <mark>每一个点的值都是唯一的.</mark></p></div><p>看完视频,这道题还是挺简单的.<br>递归函数含义: 使用传入的中序遍历 + 后序遍历 构建成树</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">40</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> postorder[N],inorder[N];</span><br><span class="line">unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; l,r,pos;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过传入的数据构建二叉树</span></span><br><span class="line"><span class="comment">// pl,pr: 后序左右端 il,ir: 中序左右端</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">build</span><span class="params">(<span class="type">int</span> pl,<span class="type">int</span> pr,<span class="type">int</span> il,<span class="type">int</span> ir)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> root = postorder[pr];</span><br><span class="line">    <span class="comment">// 找root在 中序遍历中的位置</span></span><br><span class="line">    <span class="type">int</span> k = pos[root];</span><br><span class="line">    <span class="keyword">if</span>(il &lt; k) l[root] = <span class="built_in">build</span>(pl,k - <span class="number">1</span> - il + pl,il,k - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(ir &gt; k) r[root] = <span class="built_in">build</span>(k - il + pl,pr - <span class="number">1</span>,k + <span class="number">1</span>,ir);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// bfs写层序遍历</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">(<span class="type">int</span> root)</span></span>&#123;</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(root);</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        <span class="type">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        cout&lt;&lt;t&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(l.<span class="built_in">count</span>(t)) q.<span class="built_in">push</span>(l[t]);</span><br><span class="line">        <span class="keyword">if</span>(r.<span class="built_in">count</span>(t)) q.<span class="built_in">push</span>(r[t]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i ++) cin&gt;&gt;postorder[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i ++)&#123;</span><br><span class="line">        cin&gt;&gt;inorder[i];</span><br><span class="line">        <span class="comment">// 标记位置</span></span><br><span class="line">        pos[inorder[i]] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> root = <span class="built_in">build</span>(<span class="number">0</span>,n - <span class="number">1</span>,<span class="number">0</span>,n - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">bfs</span>(root);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="97-约数之和"><a href="#97-约数之和" class="headerlink" title="97. 约数之和"></a>97. 约数之和</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230321/20230321_2.jpg" alt="约数之和"></p><p>这道题需要补充相关的数论知识.</p><div class="note info no-icon flat"><p>快速幂模板:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// m^k % p == (m % p)^k % p; </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qmi</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> k,<span class="type">int</span> p)</span></span>&#123;</span><br><span class="line">  <span class="type">int</span> res = <span class="number">1</span> % p;</span><br><span class="line">  m %= p;</span><br><span class="line">  <span class="keyword">while</span>(k)&#123;</span><br><span class="line">    <span class="keyword">if</span>(k &amp; <span class="number">1</span>) res = res * m % p;</span><br><span class="line">    m = m * m % p;</span><br><span class="line">    k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>如果害怕过程中爆int,可以使用ll类型.</p></div><p>本题代码:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">9901</span>;</span><br><span class="line">unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; prime;</span><br><span class="line"></span><br><span class="line"><span class="comment">// a^k % p = ((a % p)^k) % p</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qmi</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line">    a %= mod;</span><br><span class="line">    <span class="keyword">while</span>(k)&#123;</span><br><span class="line">        <span class="keyword">if</span>(k &amp; <span class="number">1</span>) res = res * a % mod;</span><br><span class="line">        a = a * a % mod;</span><br><span class="line">        k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 求 p^0 + p^1 + ... + p^(k - 1) </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(k == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 奇数个</span></span><br><span class="line">    <span class="keyword">if</span>(k % <span class="number">2</span>) <span class="keyword">return</span> (<span class="built_in">qmi</span>(p,k - <span class="number">1</span>) + <span class="built_in">sum</span>(p,k - <span class="number">1</span>)) % mod;</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">qmi</span>(p,k / <span class="number">2</span>) + <span class="number">1</span>) * <span class="built_in">sum</span>(p,k / <span class="number">2</span>) % mod;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="keyword">if</span>(!a)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 试除法求a的所有约数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i &lt;= a / i;i ++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(a % i == <span class="number">0</span>)&#123;</span><br><span class="line">            prime[i] ++;</span><br><span class="line">            a /= i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a &gt; <span class="number">1</span>) prime[a] ++;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span>&amp; c : prime)&#123;</span><br><span class="line">        <span class="type">int</span> p = c.first;</span><br><span class="line">        <span class="type">int</span> k = c.second * b;</span><br><span class="line">        <span class="comment">// 递归求</span></span><br><span class="line">        res = (res * <span class="built_in">sum</span>(p,k + <span class="number">1</span>)) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="98-分形之城"><a href="#98-分形之城" class="headerlink" title="98. 分形之城"></a>98. 分形之城</h2><p>做过,怎么忘了啊.<br><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230321/20230321_3.jpg" alt="分形之城"></p><p>考的是坐标的变换,还有方向相关处理.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Point</span>&#123;</span><br><span class="line">    LL x;</span><br><span class="line">    LL y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">Point <span class="title">get</span><span class="params">(<span class="type">int</span> n,LL a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">0</span>) <span class="keyword">return</span> &#123;<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    LL len = <span class="number">1ll</span> &lt;&lt; (n - <span class="number">1</span>);</span><br><span class="line">    LL size = <span class="number">1ll</span> &lt;&lt; (<span class="number">2</span> * n - <span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 求在低一级的位置</span></span><br><span class="line">    Point p = <span class="built_in">get</span>(n - <span class="number">1</span>,a % size);</span><br><span class="line">    LL x = p.x,y = p.y;</span><br><span class="line">    <span class="comment">// 判断在本级位置</span></span><br><span class="line">    <span class="type">int</span> t = a / size;</span><br><span class="line">    <span class="comment">// 四个方向的变换</span></span><br><span class="line">    <span class="keyword">if</span>(t == <span class="number">0</span>) <span class="keyword">return</span> &#123;y,x&#125;;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(t == <span class="number">1</span>) <span class="keyword">return</span> &#123;x,y + len&#125;;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(t == <span class="number">2</span>) <span class="keyword">return</span> &#123;x + len,y + len&#125;;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> &#123;len * <span class="number">2</span> - y - <span class="number">1</span>,len - <span class="number">1</span> - x&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t --)&#123;</span><br><span class="line">        LL n,a,b;</span><br><span class="line">        cin&gt;&gt;n&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        Point p1 = <span class="built_in">get</span>(n,a - <span class="number">1</span>);</span><br><span class="line">        Point p2 = <span class="built_in">get</span>(n,b - <span class="number">1</span>);</span><br><span class="line">        <span class="type">double</span> x = p1.x - p2.x,y = p1.y - p2.y;</span><br><span class="line">        <span class="comment">// 加0.5实现四舍五入</span></span><br><span class="line">        cout&lt;&lt;(LL)(<span class="built_in">sqrt</span>(x * x + y * y) * <span class="number">10</span> + <span class="number">0.5</span>)&lt;&lt;endl;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这道题还是很有意思的.观察图形获取信息然后解题.</p><p>递归还是很有难度,这地方可以出很多题目,而且这些题目都不是简单思考可以解决的.<br>最重要的是,能看出题目重叠性质.明确递归函数的含义.</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日一题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Acwing第95场</title>
      <link href="/2023/03/20/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E5%91%A8%E8%B5%9B/Acwing%E7%AC%AC95%E5%9C%BA/"/>
      <url>/2023/03/20/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E5%91%A8%E8%B5%9B/Acwing%E7%AC%AC95%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><font size=4><b>前言📝</b></font><br>题目列表:<br><a href="https://www.acwing.com/problem/content/4876/">4873. 简单计算</a><br><a href="https://www.acwing.com/problem/content/4877/">4874. 约数</a><br><a href="https://www.acwing.com/problem/content/4878/">4875. 整数游戏</a></p><p>这次的周赛还是有点难度的.</p></div><h2 id="4873-简单计算"><a href="#4873-简单计算" class="headerlink" title="4873. 简单计算"></a>4873. 简单计算</h2><p>简单的签到题<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> x1,x2,y1,y2;</span><br><span class="line">    cin&gt;&gt;x1&gt;&gt;y1&gt;&gt;x2&gt;&gt;y2;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">max</span>(<span class="built_in">abs</span>(x1 - x2),<span class="built_in">abs</span>(y1 - y2))&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="4874-约数"><a href="#4874-约数" class="headerlink" title="4874. 约数"></a>4874. 约数</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230320/20230320_1.jpg" alt="约数"></p><p>写前观察数据范围, <code>10^5</code>选择大概在<code>nLgN</code>范围的算法.<br>同时像这样的题,我们必须要有数论相干的知识:<br><div class="note success no-icon flat"><p>如果一个数的约数个数是<font color=red>奇数</font> , 则它一定是一个完全平方数! 即它一定是可开方的.</p><p>因此,这道题不是去直接求数的约数个数,而是分两步:<br>1: 判断是否是完全平方数 + 开根号求 x<br>2: 判断 x 是否是质数.</p></div></p><p>不得不说,这道题还是出的太巧妙了.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 线性筛</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_prime</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    st[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i&lt;= n;i ++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!st[i]) prime[cnt ++] = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;prime[j] * i &lt;= n;j ++)&#123;</span><br><span class="line">            st[prime[j] * i] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经过筛选后:<br>1: st数组标记了n以内每一个数据是否是质数.<br>2: prime数组存储n以内的所有质数,cnt用来计数.</p><p><strong>题目代码</strong>:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"><span class="type">int</span> prime[N],cnt;</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 线性筛</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_prime</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    st[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i&lt;= n;i ++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!st[i]) prime[cnt ++] = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;prime[j] * i &lt;= n;j ++)&#123;</span><br><span class="line">            st[prime[j] * i] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">get_prime</span>(N - <span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n -- )&#123;</span><br><span class="line">        ll a;</span><br><span class="line">        cin&gt;&gt;a;</span><br><span class="line">        ll x = <span class="built_in">sqrt</span>(a);</span><br><span class="line">        <span class="keyword">if</span>(x * x == a &amp;&amp; !st[x]) cout&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>在考试的时候,在疯狂的尝试用求个数的代码.到最后几分钟才想起没准3是特别设计过的.</p><h2 id="4875-整数游戏"><a href="#4875-整数游戏" class="headerlink" title="4875. 整数游戏"></a>4875. 整数游戏</h2><p>看题意,应该是博弈论相关.<br><a href="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230320/20230320_2.jpg">整数游戏</a></p><div class="note info no-icon flat"><p>y总提示:<br>对于博弈论题目: <mark>大胆假设,小心求证</mark></p><p>证什么? 证 必胜 与 必败 之间的转换.</p><p>对于这道题:<br>必胜条件: 第一个数 不是最小的数<br>必败条件: 第一个数 是最小的数<br>有了这个, 这道题就变得非常非常的简单了.</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> t,n;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t --)&#123;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>;i ++)&#123;</span><br><span class="line">            <span class="type">int</span> y;</span><br><span class="line">            cin&gt;&gt;y;</span><br><span class="line">            <span class="keyword">if</span>(y &lt; x) flag = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag) cout&lt;&lt;<span class="string">&quot;Bob&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;Alice&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这次周赛考的是思维吧!!</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Acwing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Acwing递推</title>
      <link href="/2023/03/18/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek1/Acwing%E9%80%92%E6%8E%A8/"/>
      <url>/2023/03/18/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek1/Acwing%E9%80%92%E6%8E%A8/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>递推,上难度了!<br>不过一般递推时间复杂度都很高,一般是放在填空题的最后几道.</p></div><h2 id="3777-砖块"><a href="#3777-砖块" class="headerlink" title="3777. 砖块"></a>3777. 砖块</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230318/20230318_5.jpg" alt="砖块"></p><p>正常想是有点困难的.这个时候就要学会直接暴力.<br>(正好数据范围很小)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">string str;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">char</span>&amp; c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(c == <span class="string">&#x27;W&#x27;</span>) c = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> c = <span class="string">&#x27;W&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">char</span> c)</span></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; res;</span><br><span class="line">    string s = str;</span><br><span class="line">    <span class="comment">// 直接尝试修改</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n - <span class="number">1</span>;i ++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i] != c)&#123;</span><br><span class="line">            <span class="built_in">update</span>(s[i]);</span><br><span class="line">            <span class="built_in">update</span>(s[i + <span class="number">1</span>]);</span><br><span class="line">            <span class="comment">// i + 1 因为题目数组从1开始</span></span><br><span class="line">            res.<span class="built_in">push_back</span>(i + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 最后一位不同 =&gt; 修改失败</span></span><br><span class="line">    <span class="keyword">if</span>(s.<span class="built_in">back</span>() != c) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    cout&lt;&lt;res.<span class="built_in">size</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span>&amp; i : res) cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="comment">// 只有上面有输出才能换行</span></span><br><span class="line">    <span class="keyword">if</span>(res.<span class="built_in">size</span>())cout&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t --)&#123;</span><br><span class="line">        cin&gt;&gt;n&gt;&gt;str;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">check</span>(<span class="string">&#x27;B&#x27;</span>) &amp;&amp; !<span class="built_in">check</span>(<span class="string">&#x27;W&#x27;</span>)) cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1208-翻硬币"><a href="#1208-翻硬币" class="headerlink" title="1208. 翻硬币"></a>1208. 翻硬币</h2><p>蓝桥杯上的题(也是维视蓝桥杯被称为暴力杯的原因)<br>全是套路,没有技巧!</p><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230318/20230318_6.jpg" alt="翻硬币"></p><p>和上面一摸一样的套路<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string start,e;</span><br><span class="line"><span class="type">int</span> res = <span class="number">110</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">char</span>&amp; c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(c == <span class="string">&#x27;o&#x27;</span>) c = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> c = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n = start.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    string s = start;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n - <span class="number">1</span>;i ++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i] != e[i])&#123;</span><br><span class="line">            <span class="built_in">update</span>(s[i]);</span><br><span class="line">            <span class="built_in">update</span>(s[i + <span class="number">1</span>]);</span><br><span class="line">            ans ++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(s[n - <span class="number">1</span>] == e[n - <span class="number">1</span>])&#123;</span><br><span class="line">        res = <span class="built_in">min</span>(res,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;start&gt;&gt;e;</span><br><span class="line">    <span class="built_in">check</span>();</span><br><span class="line">    cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h2 id="95-费解的开关"><a href="#95-费解的开关" class="headerlink" title="95. 费解的开关"></a>95. 费解的开关</h2><p>这道题还是有点不同的!<br><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230318/20230318_7.jpg" alt="费解的开关"></p><p>这道题可能会想到和上面相似的思路.但不是那样是实现的.因为具体的逻辑是不太一样的.</p><p>所以又没有思路了,这时我们可以通过<code>最少</code> 想到bfs.</p><h3 id="BFS写法"><a href="#BFS写法" class="headerlink" title="BFS写法"></a>BFS写法</h3><p>bfs写法复杂度高达O(2^25) 大概<code>3 * 10^7</code>,只能说勉强能过.<br>对于不必要的,必须剪枝.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; vis;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">change</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> i)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 改变选定位置</span></span><br><span class="line">    x ^= (<span class="number">1</span> &lt;&lt; i);</span><br><span class="line">    <span class="comment">// 左 非最左边</span></span><br><span class="line">    <span class="keyword">if</span>(i % <span class="number">5</span>) x ^= (<span class="number">1</span> &lt;&lt; (i - <span class="number">1</span>));  </span><br><span class="line">    <span class="comment">// 上 非第一排</span></span><br><span class="line">    <span class="keyword">if</span>(i &gt;= <span class="number">5</span>) x ^= (<span class="number">1</span> &lt;&lt; (i - <span class="number">5</span>));</span><br><span class="line">    <span class="comment">// 下 非最后一排</span></span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">20</span>) x ^= (<span class="number">1</span> &lt;&lt; (i + <span class="number">5</span>));</span><br><span class="line">    <span class="comment">// 特判第一排</span></span><br><span class="line">    <span class="keyword">if</span>(i % <span class="number">5</span> &lt; <span class="number">4</span>) x ^= (<span class="number">1</span> &lt;&lt; (i + <span class="number">1</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> statue = (<span class="number">1</span> &lt;&lt; <span class="number">25</span>) - <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 设为1 方便将无解-1统一到一起.</span></span><br><span class="line">    vis[statue] = <span class="number">1</span>;</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(statue);</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        <span class="type">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="comment">// 大于6步,立马剪枝</span></span><br><span class="line">        <span class="keyword">if</span>(vis[t] == <span class="number">7</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">// 从0开始,方便取模</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">25</span>;i ++)&#123;</span><br><span class="line">            <span class="type">int</span> c = <span class="built_in">change</span>(t,i);</span><br><span class="line">            <span class="keyword">if</span>(!vis.<span class="built_in">count</span>(c))&#123;</span><br><span class="line">                vis[c] = vis[t] + <span class="number">1</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(c);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">bfs</span>();</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t -- )&#123;</span><br><span class="line">        <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">25</span>;i ++)&#123;</span><br><span class="line">            <span class="type">char</span> x;</span><br><span class="line">            cin&gt;&gt;x;</span><br><span class="line">            num += ((x - <span class="string">&#x27;0&#x27;</span>) &lt;&lt; i);</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;(vis[num] - <span class="number">1</span>)&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在没有思路时,像这样暴力的方法还是需要会的.</p><h3 id="递推解法"><a href="#递推解法" class="headerlink" title="递推解法"></a>递推解法</h3><p>通过观察发现,如果我们可以固定第一行,则对于第一行中的0,我们只能通过改变下一行的灯使其变1.<br>因此,我们先枚举第1行所有改变情况,然后递推2,3,4行,第5行用来判断是否成功.</p><div class="note info no-icon flat"><p>至于为啥对第1行进行特殊处理,这就是和前两道题不同的地方了.<br>要多想.</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> g[<span class="number">5</span>][<span class="number">5</span>],bg[<span class="number">5</span>][<span class="number">5</span>];</span><br><span class="line"><span class="type">int</span> dir[<span class="number">5</span>][<span class="number">2</span>] = &#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>;k &lt; <span class="number">5</span>;k ++)&#123;</span><br><span class="line">        <span class="type">int</span> di = i + dir[k][<span class="number">0</span>],dj = j + dir[k][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(di &lt; <span class="number">0</span> || di &gt;= <span class="number">5</span> || dj &lt; <span class="number">0</span> || dj &gt;= <span class="number">5</span>) <span class="keyword">continue</span>;</span><br><span class="line">        g[di][dj] ^= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t --)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>;i ++) cin&gt;&gt; bg[i];</span><br><span class="line">        <span class="type">int</span> res = <span class="number">7</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> op = <span class="number">0</span>;op &lt; <span class="number">32</span>;op ++)&#123;</span><br><span class="line">            <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">memcpy</span>(g,bg,<span class="keyword">sizeof</span> bg);</span><br><span class="line">            <span class="comment">// 处理第一行</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">5</span>;j ++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(op &gt;&gt; j &amp; <span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="built_in">change</span>(<span class="number">0</span>,j);</span><br><span class="line">                    cnt ++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i ++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">5</span>;j ++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(g[i][j] == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                        <span class="built_in">change</span>(i + <span class="number">1</span>,j);</span><br><span class="line">                        cnt ++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 判断</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i ++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(g[<span class="number">4</span>][i] == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                    cnt = <span class="number">8</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            res = <span class="built_in">min</span>(res,cnt);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(res &gt; <span class="number">6</span>) cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码上比上面少很多,不过这些都是建立在对题意把握的份上.</p><p>递推识别起来不难,难的是想最后这道题一样需要额外的处理.</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日一题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Acwing双指针</title>
      <link href="/2023/03/18/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek1/Acwing%E5%8F%8C%E6%8C%87%E9%92%88/"/>
      <url>/2023/03/18/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek1/Acwing%E5%8F%8C%E6%8C%87%E9%92%88/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><font size=4><b>前言📝</b></font><br>双指针算的上是一个很有技巧的算法.<br>双指针分两种: 快慢指针, 相反指针.<br>其中快慢指针非常的常见, 相反指针我只用过一次(还是模板题).</p></div><h2 id="799-最长连续不重复子序列"><a href="#799-最长连续不重复子序列" class="headerlink" title="799. 最长连续不重复子序列"></a>799. 最长连续不重复子序列</h2><p><mark>非常经典的双指针例题</mark><br><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230318/20230318_1.jpg" alt="最长连续不重复子序列"></p><p>这道题的数据范围给的非常好,类似的情况我们可以用<code>set</code>来代替<code>s数组</code>.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> s[N];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i ++) cin&gt;&gt;a[i];</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>,j = <span class="number">0</span>;i &lt; n;i ++)&#123;</span><br><span class="line">        <span class="comment">// 将要添加的已经存在,去掉</span></span><br><span class="line">        <span class="keyword">while</span>(s[a[i]])&#123;</span><br><span class="line">            s[a[j ++]] --;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 添加</span></span><br><span class="line">        s[a[i]] ++;</span><br><span class="line">        <span class="comment">// 计算最大长度</span></span><br><span class="line">        res = <span class="built_in">max</span>(res,i - j + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>放y总的:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q[N], s[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        s[q[i]] ++ ;</span><br><span class="line">        <span class="keyword">while</span> (j &lt; i &amp;&amp; s[q[i]] &gt; <span class="number">1</span>) s[q[j ++ ]] -- ;</span><br><span class="line">        res = <span class="built_in">max</span>(res, i - j + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>自我感觉<code>j &lt; i</code>可以去掉.总体思路是一样的.</p><h2 id="2816-判断子序列"><a href="#2816-判断子序列" class="headerlink" title="2816. 判断子序列"></a>2816. 判断子序列</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230318/20230318_2.jpg" alt="判断子序列"></p><p><strong>简单但容易犯错</strong></p><p>这题的数据很有意思,如果不加以判断则很容易出错.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N],b[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n;i ++) cin&gt;&gt;a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m;i ++) cin&gt;&gt;b[i];</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; m;i ++)&#123;</span><br><span class="line">        <span class="comment">// 必须加上判断 j &lt; n</span></span><br><span class="line">        <span class="keyword">if</span>(b[i] == a[j] &amp;&amp; j &lt; n) j ++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j == n) cout&lt;&lt;<span class="string">&quot;Yes&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;No&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>要么就像y总这样写:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; n &amp;&amp; j &lt; m)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (a[i] == b[j]) i ++ ;</span><br><span class="line">    j ++ ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>保证不会翻车.</p><h2 id="1238-日志统计"><a href="#1238-日志统计" class="headerlink" title="1238. 日志统计"></a>1238. 日志统计</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230318/20230318_3.jpg" alt="日志统计"></p><p>非常好的一道题.(当然也是蓝桥杯原题)<br>熟练使用<code>pair</code>和 <code>双指针</code>算法.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> cnt[N];</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"></span><br><span class="line">pii logs[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,d,k;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;d&gt;&gt;k;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n;i ++)&#123;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        logs[i] = &#123;a,b&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(logs,logs + n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>,j = <span class="number">0</span>;i &lt; n;i ++)&#123;</span><br><span class="line">        <span class="type">int</span> id = logs[i].y;</span><br><span class="line">        cnt[id] ++;</span><br><span class="line">        <span class="comment">// 去除失效的赞</span></span><br><span class="line">        <span class="keyword">while</span>(logs[i].x - logs[j].x &gt;= d)&#123;</span><br><span class="line">            cnt[logs[j].y] --;</span><br><span class="line">            j ++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 肯定是判断当前</span></span><br><span class="line">        <span class="keyword">if</span>(cnt[id] &gt;= k)&#123;</span><br><span class="line">            st[id] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(st[i])&#123;</span><br><span class="line">            cout&lt;&lt;i&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>也算是最后几道题,其实算法并不是很复杂.关键是要对自己有信心!!!</p><h2 id="1240-完全二叉树的权值"><a href="#1240-完全二叉树的权值" class="headerlink" title="1240. 完全二叉树的权值"></a>1240. 完全二叉树的权值</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230318/20230318_4.jpg" alt="完全二叉树的权值"></p><p>写这道题之前必须了解完全二叉数的定义.<br>简单的来说,完全二叉数是指除了最后一行,其他行都是满的二叉树.</p><p>虽然y总把这道题也放在双指针这里,但我第一时间想到的却不是双指针.<br>而是一种更简单的方式.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="comment">// 相加和会爆int</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="comment">// 2的18次方超过10^5</span></span><br><span class="line">ll cnt[<span class="number">18</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="comment">// 求最高层数</span></span><br><span class="line">    <span class="type">int</span> t = (<span class="type">int</span>)<span class="built_in">log2</span>(n) + <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        <span class="comment">// (int)log2(i) + 1 直接求对应的层数</span></span><br><span class="line">        cnt[(<span class="type">int</span>)<span class="built_in">log2</span>(i) + <span class="number">1</span>] += x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 先赋值为最小值</span></span><br><span class="line">    ll res = <span class="number">-1e18</span>;</span><br><span class="line">    <span class="type">int</span> h = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t;i ++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(res &lt; cnt[i])&#123;</span><br><span class="line">            h = i;</span><br><span class="line">            res = cnt[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;h&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我是利用<code>(int)log2(i) + 1</code> 直接求出所在层数.在输入阶段即可完成累加.</p><p>不过这道题其他地方还是很恶心的.(爆int, 数据有正有负)</p><p>y总使用双指针:<br>一个控制每层最大几个数,<br>另一个将实际的数据累加起来.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line">    LL maxs = <span class="number">-1e18</span>;</span><br><span class="line">    <span class="type">int</span> depth = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> d = <span class="number">1</span>, i = <span class="number">1</span>; i &lt;= n; i *= <span class="number">2</span>, d ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        LL s = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; i + (<span class="number">1</span> &lt;&lt; d - <span class="number">1</span>) &amp;&amp; j &lt;= n; j ++ )</span><br><span class="line">            s += a[j];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (s &gt; maxs)</span><br><span class="line">        &#123;</span><br><span class="line">            maxs = s;</span><br><span class="line">            depth = d;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, depth);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>双指针在蓝桥杯中还是挺常见的.</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日一题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Acwing二分查找</title>
      <link href="/2023/03/17/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek1/Acwing%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
      <url>/2023/03/17/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek1/Acwing%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>二分查找虽然思想简单,但能做到查找无错还是非常困难的.<br>因此需要经常复习.</p><p>口诀:<br><mark>while中只写<code>l &lt; r</code>,r = mid mid不变, l = mid mid + 1.判断好情况再动手</mark></p><p>用二分法解决的问题必须是有二分性质的.</p></div><h2 id="1460-我在哪？"><a href="#1460-我在哪？" class="headerlink" title="1460. 我在哪？"></a>1460. 我在哪？</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230317/20230317_1.jpg" alt="我在哪？"></p><p>这道题没写出来,我只能说是太久没写题目了.很多东西反应都没了.<br>这道题的特点还是非常的明显的:<br>最小的K =&gt; 二分<br>字符字串比较 =&gt; 字符哈希</p><p>搞清楚了这两点,这道题就非常的简单了.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;unordered_set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string str;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">unordered_set&lt;string&gt; S;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    S.<span class="built_in">clear</span>();</span><br><span class="line">    <span class="comment">// i + x - 1 ?</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i + x - <span class="number">1</span> &lt; n;i ++)&#123;</span><br><span class="line">        string t = str.<span class="built_in">substr</span>(i,x);</span><br><span class="line">        <span class="keyword">if</span>(S.<span class="built_in">count</span>(t)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        S.<span class="built_in">insert</span>(t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;str;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">1</span>,r = n;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid)) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;l&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不得不说,这道题还是很好的.</p><p>不过呢,这道题也可以通过暴力解决.5555<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string str;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;str;</span><br><span class="line">    <span class="comment">// 遍历k值</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">1</span>;k &lt;= n;k ++)&#123;</span><br><span class="line">        <span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">// 判断i j开头的字串是否相等</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i + k - <span class="number">1</span> &lt; n;i ++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = i + <span class="number">1</span>;j + k - <span class="number">1</span> &lt; n;j ++)&#123;</span><br><span class="line">                <span class="type">bool</span> same = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> u = <span class="number">0</span>;u &lt; k;u ++)&#123;</span><br><span class="line">                    <span class="comment">// 存在不等</span></span><br><span class="line">                    <span class="keyword">if</span>(str[i + u] != str[j + u])&#123;</span><br><span class="line">                        same = <span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 有相同的 k值无效</span></span><br><span class="line">                <span class="keyword">if</span>(same)&#123;</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 无效直接去下一个k</span></span><br><span class="line">            <span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">            cout&lt;&lt;k&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这里贴上暴力写法,因为比赛场上,写出暴力也算是一种胜利!</p><h2 id="1221-四平方和"><a href="#1221-四平方和" class="headerlink" title="1221. 四平方和"></a>1221. 四平方和</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230317/20230317_2.jpg" alt="四平方和"></p><p>在考场上,如果暂时想不到怎么写.首先必须要会暴力解题.<br><strong>暴力解</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n</span><br><span class="line">;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> a = <span class="number">0</span>;a * a &lt;= n;a ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> b = a;b * b + a * a &lt;= n;b ++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> c = b;c * c + b * b + a * a &lt;= n;c ++)&#123;</span><br><span class="line">                <span class="type">int</span> t = n - (c * c + b * b + a * a);</span><br><span class="line">                <span class="type">int</span> d = <span class="built_in">sqrt</span>(t);</span><br><span class="line">                <span class="keyword">if</span>(d * d == t)&#123;</span><br><span class="line">                    cout&lt;&lt;a&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;b&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;c&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;d&lt;&lt;endl;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们通过数据范围<code>5 * 10^6</code> 可以算出最坏可以跑到<code>10^10</code>左右.肯定是会超时的.<br>但是,没有思路一定要先这样写.思路可以慢慢找,题目先写出来再说.</p><p>这道题,我也想过通过二分,但这一共有4个数,怎么使用二分?<br>真是头疼!</p><p>y总表示: 强行<mark>将四个分成两组</mark>.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 先跑一遍算出来</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1965411</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Num</span>&#123;</span><br><span class="line">    <span class="type">int</span> s;</span><br><span class="line">    <span class="type">int</span> c,d;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 重载 &lt;</span></span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span> &lt; (<span class="type">const</span> Num &amp; w) <span class="type">const</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(s != w.s) <span class="keyword">return</span> s &lt; w.s;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c != w.c) <span class="keyword">return</span> c &lt; w.c;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> d &lt; w.d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;Nums[N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> a = <span class="number">0</span>;a * a &lt;= n;a ++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> b = a;b * b + a * a &lt;= n;b ++)</span><br><span class="line">            Nums[m ++] = &#123;a * a + b * b,a,b&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">sort</span>(Nums,Nums + m);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> a = <span class="number">0</span>;a * a &lt;= n;a ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> b = a;b * b + a * a &lt;= n;b ++)&#123;</span><br><span class="line">            <span class="type">int</span> t = n - a * a - b * b;</span><br><span class="line">            <span class="type">int</span> l = <span class="number">0</span>,r = m - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">                <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(Nums[mid].s &gt;= t) r = mid;</span><br><span class="line">                <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(Nums[l].s == t)&#123;</span><br><span class="line">                cout&lt;&lt;a&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;b&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;Nums[l].c&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;Nums[l].d&lt;&lt;endl;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="1227-分巧克力"><a href="#1227-分巧克力" class="headerlink" title="1227. 分巧克力"></a>1227. 分巧克力</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230317/20230317_3.jpg" alt="分巧克力"></p><p>题目透露一个很重要的点:  我们只能去拆分方块.不能将方块拼起来.</p><p>所以我们就可以用O(n)时间<code>check</code>.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> h[N],w[N];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> mid)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)&#123;</span><br><span class="line">        ans += (h[i] / mid) * (w[i] / mid);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans &gt;= m) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="type">int</span> r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)&#123;</span><br><span class="line">        cin&gt;&gt;h[i]&gt;&gt;w[i];</span><br><span class="line">        r = <span class="built_in">max</span>(h[i],r);</span><br><span class="line">        r = <span class="built_in">max</span>(w[i],r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid)) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;l&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="113-特殊排序"><a href="#113-特殊排序" class="headerlink" title="113. 特殊排序"></a>113. 特殊排序</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230317/20230317_4.jpg" alt="特殊排序"></p><p>一道交互题,通过这道题来说明下二分选择不同形成的结果不同.</p><p><strong>二分找 &lt;i 的最后一个位置r</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">specialSort</span><span class="params">(<span class="type">int</span> N)</span> </span>&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">res</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i &lt;= N;i ++)&#123;</span><br><span class="line">            <span class="type">int</span> l = <span class="number">0</span>,r = res.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 找到最后一个 &lt; i的位置r</span></span><br><span class="line">            <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">                <span class="type">int</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">compare</span>(res[mid],i)) l = mid;</span><br><span class="line">                <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            res.<span class="built_in">push_back</span>(i);</span><br><span class="line">            <span class="comment">// 尝试将i移动到r+1位置处.</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = res.<span class="built_in">size</span>() - <span class="number">2</span>;j &gt; r;j --) <span class="built_in">swap</span>(res[j],res[j + <span class="number">1</span>]);</span><br><span class="line">            <span class="comment">// 特况: 如果 i&lt;res[r] 说明i是最小的元素</span></span><br><span class="line">            <span class="comment">// 此时 i 应该插入到结果数组res的第一个位置</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">compare</span>(i,res[r])) <span class="built_in">swap</span>(res[r],res[r + <span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p><strong>二分查找 &gt;i 的第一个位置r</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">specialSort</span><span class="params">(<span class="type">int</span> N)</span> </span>&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">res</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i &lt;= N;i ++)&#123;</span><br><span class="line">            <span class="comment">// 先放进来 占个位置</span></span><br><span class="line">            res.<span class="built_in">push_back</span>(i);</span><br><span class="line">            <span class="type">int</span> l = <span class="number">0</span>,r = res.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 二分找 &gt;i的第一个位置</span></span><br><span class="line">            <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">                <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">compare</span>(i,res[mid])) r = mid;</span><br><span class="line">                <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 将i放在r这个位置上</span></span><br><span class="line">            <span class="comment">// 此时特况: i为最大值, 正好放在最后,无需移动</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = res.<span class="built_in">size</span>() - <span class="number">2</span>;j &gt;= r;j --) <span class="built_in">swap</span>(res[j],res[j + <span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>可以细细比较两种方式在细节上的不同.<br>怎么说呢,客观的来讲,两者之间没有任何复杂度的差距,只是特殊情况的不同.<br>在实战中,我们要尽量的避免过多考虑特殊情况.(<mark>百虑必有一失</mark>)</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日一题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Acwing第92场</title>
      <link href="/2023/03/15/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E5%91%A8%E8%B5%9B/Acwing%E7%AC%AC92%E5%9C%BA/"/>
      <url>/2023/03/15/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E5%91%A8%E8%B5%9B/Acwing%E7%AC%AC92%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><font size=4><b>前言📝</b></font><br>题目链接:<br><a href="https://www.acwing.com/problem/content/4867/">4864. 多边形</a><br><a href="https://www.acwing.com/problem/content/4868/">4865. 有效类型</a><br><a href="https://www.acwing.com/problem/content/4869/">4866. 最大数量</a></p></div><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h3 id="4864-多边形"><a href="#4864-多边形" class="headerlink" title="4864. 多边形"></a>4864. 多边形</h3><p>签到题.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n --)&#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        <span class="keyword">if</span>(x % <span class="number">4</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="4865-有效类型"><a href="#4865-有效类型" class="headerlink" title="4865. 有效类型"></a>4865. 有效类型</h3><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230315/20230315_3.jpg" alt="有效类型"></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Acwing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Acwing差分数组</title>
      <link href="/2023/03/15/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek1/Acwing%E5%B7%AE%E5%88%86%E6%95%B0%E7%BB%84/"/>
      <url>/2023/03/15/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek1/Acwing%E5%B7%AE%E5%88%86%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>差分数组:<br>  处理大量区间操作.</p><p>一维差分: <code>p[l] += c; p[r + 1] -= c</code>.</p><p>差分常常与前缀和配合使用.</p></div><h2 id="3729-改变数组元素"><a href="#3729-改变数组元素" class="headerlink" title="3729. 改变数组元素"></a>3729. 改变数组元素</h2><p>典型的差分数组应用.</p><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230315/20230315_1.jpg" alt="改变数组元素"></p><p><u>和前缀和一样,必须计算好下标</u></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200010</span>;</span><br><span class="line"><span class="type">int</span> s[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    s[l] += <span class="number">1</span>;</span><br><span class="line">    s[r + <span class="number">1</span>] -= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> t,n,x;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t --)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(s,<span class="number">0</span>,<span class="keyword">sizeof</span> s);</span><br><span class="line">        <span class="built_in">memset</span>(st,<span class="number">0</span>,<span class="keyword">sizeof</span> st);</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)&#123;</span><br><span class="line">            cin&gt;&gt;x;</span><br><span class="line">            <span class="keyword">if</span>(x &gt;= i)&#123;</span><br><span class="line">                <span class="built_in">insert</span>(<span class="number">1</span>,i);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">insert</span>(i - x + <span class="number">1</span>,i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 输出答案</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)&#123;</span><br><span class="line">            s[i] += s[i - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(s[i]) cout&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="100-增减序列"><a href="#100-增减序列" class="headerlink" title="100. 增减序列"></a>100. 增减序列</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230315/20230315_2.jpg" alt="增减序列"></p><div class="note info no-icon flat"><p>非常好的一道题, 对差分数组的考察很透彻!!</p></div><p>分析:<br>看完题目后,很容易想到用差分来写.(差分就是来写这种区间上操作)<br>众所周知:<br>题目要求的操作等价于 在差分数组中选择两位,一位+1,另一位-1.<br>题目操作结果所有数据相等,而这样序列的差分数组在<code>2~n</code>上全为零.<br>题目要求每次只操作一下,计算差分数组中正数和,负数绝对值和,二者最大数就是操作次数.<br>题目要求求出结果种数,在差分视角下即最终1号位上变化的次数.<br>这里不得不提一下第<code>n + 1</code>位.<br>因为差分插入时有一步操作为<code>s[r + 1] -= c</code>.<br>所以在选择操作两位上我们可以选择:<br>两位都是在[2~n]中(优先)<br>一位是1,另一位在[2~n].<br>或者一位是n+1,另一位在[2~n]中.<br>因此种数为 正数和与负数和的差 + 1.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>,INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">ll s[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,ll c)</span></span>&#123;</span><br><span class="line">    s[l] += c;</span><br><span class="line">    s[r + <span class="number">1</span>] -= c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    ll t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)&#123;</span><br><span class="line">        cin&gt;&gt;t;</span><br><span class="line">        <span class="built_in">insert</span>(i,i,t);</span><br><span class="line">    &#125;</span><br><span class="line">    ll fu = <span class="number">0</span>,ze = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i &lt;= n;i ++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i] &lt; <span class="number">0</span>) fu += -s[i];</span><br><span class="line">        <span class="keyword">else</span> ze += s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">max</span>(fu,ze)&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">abs</span>(fu - ze) + <span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日一题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Acwing前缀和</title>
      <link href="/2023/03/14/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek1/Acwing%E5%89%8D%E7%BC%80%E5%92%8C/"/>
      <url>/2023/03/14/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E8%93%9DWeek1/Acwing%E5%89%8D%E7%BC%80%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>前缀和:<br>    处理区间和使用,非常的好用.<br>一维前缀和: <code>p[l ~r] = p[r] - p[l - 1]</code>.</p></div><h2 id="3956-截断数组"><a href="#3956-截断数组" class="headerlink" title="3956. 截断数组"></a>3956. 截断数组</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230314/20230314_3.jpg" alt="截断数组"></p><p>非常有意思的一道题.</p><p>怎么求三等分点?甚至只通过一次遍历找到所有三等分点的方案.<br>这道题完美的体现.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> p[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;=n;i ++)&#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin&gt;&gt; x;</span><br><span class="line">        p[i] = p[i - <span class="number">1</span>] + x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 判定能否三等分</span></span><br><span class="line">    <span class="keyword">if</span>(p[n] %  <span class="number">3</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//所有数的总和</span></span><br><span class="line">    <span class="type">int</span> sum = p[n];</span><br><span class="line">    <span class="comment">// 方案数需要ll</span></span><br><span class="line">    ll cnt = <span class="number">0</span>,res = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 遍历求第二个三等分点</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i &lt; n;i ++)&#123;</span><br><span class="line">        <span class="comment">// 判定是否是第一个三等分点</span></span><br><span class="line">        <span class="keyword">if</span>(p[i - <span class="number">1</span>] == sum / <span class="number">3</span>) cnt ++;</span><br><span class="line">        <span class="keyword">if</span>(p[i] == sum / <span class="number">3</span> * <span class="number">2</span>) res += cnt; </span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1230-K倍区间"><a href="#1230-K倍区间" class="headerlink" title="1230. K倍区间"></a>1230. K倍区间</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230314/20230314_4.jpg" alt="K倍区间"></p><p>非常好的一道题.</p><p>如何在一次遍历中完成全部计数,同时能做到不重不漏?</p><p>这里有题目得到一个非常重要的结论: <mark>只有 <code>前缀和%k 相等</code>的i,j是之间区间和为k倍区间</mark>.<br>因此,我们可以在处理成前缀和时,同时将%k操作也处理下.<br>之后可以用公式求计数个数,也可以像我这样模拟计数过程.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line">ll p[N];</span><br><span class="line"><span class="type">int</span> cnt[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,k;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)&#123;</span><br><span class="line">        cin&gt;&gt; x;</span><br><span class="line">        <span class="comment">// 前缀和</span></span><br><span class="line">        p[i] = p[i - <span class="number">1</span>] + x;</span><br><span class="line">        <span class="comment">// %k操作</span></span><br><span class="line">        x = p[i] % k;</span><br><span class="line">        <span class="comment">// 计数</span></span><br><span class="line">        <span class="keyword">if</span>(cnt[x]) res += cnt[x];</span><br><span class="line">        cnt[x] ++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 不要忘记 %k = 0的全部都独自满足条件</span></span><br><span class="line">    res += cnt[<span class="number">0</span>];</span><br><span class="line">    cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="99-激光炸弹"><a href="#99-激光炸弹" class="headerlink" title="99. 激光炸弹"></a>99. 激光炸弹</h2><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230314/20230314_5.jpg" alt="激光炸弹"></p><div class="note info no-icon flat"><p>这题数据范围非常的恶心.<br>但思路简单.就是前缀和</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5010</span>;</span><br><span class="line"><span class="type">int</span> p[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    m = <span class="built_in">min</span>(m,<span class="number">5001</span>);</span><br><span class="line">    <span class="type">int</span> x,y,w;</span><br><span class="line">    <span class="keyword">while</span>(n --)&#123;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y&gt;&gt;w;</span><br><span class="line">        p[++x][++y] += w;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">5001</span>;i ++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= <span class="number">5001</span>;j ++)</span><br><span class="line">            p[i][j] += p[i - <span class="number">1</span>][j] + p[i][j - <span class="number">1</span>] - p[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = m;i &lt;= <span class="number">5001</span>;i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = m;j &lt;= <span class="number">5001</span>;j ++)&#123;</span><br><span class="line">            res = <span class="built_in">max</span>(res,p[i][j] - p[i - m][j] - p[i][j - m] + p[i - m][j - m]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>这里为了防止陷入边界情况,++x,++y</strong>.<br><div class="note success no-icon flat"><p>根据数据范围,矩阵最大为<code>5001 * 5001</code>.<br>但打击范围R可以到<code>10^9</code>.因此必须判断R是否大于5001.</p></div></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日一题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Acwing第93场</title>
      <link href="/2023/03/14/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E5%91%A8%E8%B5%9B/Acwing%E7%AC%AC93%E5%9C%BA/"/>
      <url>/2023/03/14/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E5%91%A8%E8%B5%9B/Acwing%E7%AC%AC93%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><font size=4><b>前言📝</b></font><br>题目链接:<br><a href="https://www.acwing.com/problem/content/4870/">4867. 整除数</a><br><a href="https://www.acwing.com/problem/content/4871/">4868. 数字替换</a><br><a href="https://www.acwing.com/problem/content/4872/">4869. 异或值</a></p></div><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h3 id="4867-整除数"><a href="#4867-整除数" class="headerlink" title="4867. 整除数"></a>4867. 整除数</h3><p>签到题吗? 确实</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="type">int</span> k = n / m;</span><br><span class="line">    cout&lt;&lt; (k + <span class="number">1</span>) * m&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有时候不需要想的那么复杂.</p><h3 id="4868-数字替换"><a href="#4868-数字替换" class="headerlink" title="4868. 数字替换"></a>4868. 数字替换</h3><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230314/20230314_1.jpg" alt="数字替换"></p><p>思路上: 第一感觉上,每次乘以最大的位数即可.但直接打脸.<br>比如<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">43 3 =&gt; 129 9 =&gt; 1161 6 =&gt; 6966</span><br><span class="line">43 4 =&gt; 172 7 =&gt; 1204 4 =&gt; 4816</span><br></pre></td></tr></table></figure><br><mark>每次只乘最大的数,可能会出现结果都是很小的数字组成.</mark></p><p>当然这道题,y总很善良的给了一个样例提醒我们.</p><p>然后,第二感觉上是使用<code>bfs</code>.<br>怎么说呢,使用了很多辅助函数,导致顺利通过了这道题.</p><h4 id="bfs-to-string-stoll"><a href="#bfs-to-string-stoll" class="headerlink" title="bfs + to_string + stoll"></a>bfs + to_string + stoll</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    queue&lt;ll&gt; q;</span><br><span class="line">    unordered_map&lt;ll,<span class="type">int</span>&gt; d;</span><br><span class="line">    q.<span class="built_in">push</span>(m);</span><br><span class="line">    d[m] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        <span class="keyword">auto</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        string s = <span class="built_in">to_string</span>(t);</span><br><span class="line">        <span class="keyword">if</span>(s.<span class="built_in">size</span>() == n)&#123;</span><br><span class="line">            <span class="keyword">return</span> d[t];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> &amp; x : s)&#123;</span><br><span class="line">            ll num = t * (x - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!d.<span class="built_in">count</span>(num))&#123;</span><br><span class="line">                d[num] = d[t] + <span class="number">1</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(num);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">bfs</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行时间:    765 ms</p><p><mark>后来发现,还是自己手写的更快一点</mark></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    queue&lt;ll&gt; q;</span><br><span class="line">    unordered_map&lt;ll,<span class="type">int</span>&gt; d;</span><br><span class="line">    q.<span class="built_in">push</span>(m);</span><br><span class="line">    d[m] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        ll t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="comment">// 手动获取每一位</span></span><br><span class="line">        <span class="type">bool</span> st[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        ll y = t;</span><br><span class="line">        <span class="keyword">while</span>(y)&#123;</span><br><span class="line">            cnt ++;</span><br><span class="line">            st[y % <span class="number">10</span>] = <span class="literal">true</span>;</span><br><span class="line">            y /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 判定</span></span><br><span class="line">        <span class="keyword">if</span>(cnt == n) <span class="keyword">return</span> d[t];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 优化查询</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">9</span>;i &gt; <span class="number">1</span>;i --)&#123;</span><br><span class="line">            <span class="keyword">if</span>(st[i])&#123;</span><br><span class="line">                y = t * i;</span><br><span class="line">                <span class="keyword">if</span>(!d.<span class="built_in">count</span>(y))&#123;</span><br><span class="line">                    d[y] = d[t] + <span class="number">1</span>;</span><br><span class="line">                    q.<span class="built_in">push</span>(y);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">bfs</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行时间:    403 ms</p><p>本来我以为已经够快了.直到看到了y总的写法???!!!<br>真是惊为天人.</p><h4 id="dfs-最优化剪枝"><a href="#dfs-最优化剪枝" class="headerlink" title="dfs + 最优化剪枝"></a>dfs + 最优化剪枝</h4><p>dfs的最大方便的地方就是它非常方便的进行剪枝.(y总推荐).</p><p><strong>减枝策略</strong>:<br>1: 当前步数如果超过最优解. 直接剪.<br>2: 从当前步到最优解每次都乘10也未能达到要求, 直接剪.(未使用)</p><p><strong>优化搜索</strong>:</p><p>使用从大到小枚举. 有更大的概率接近最优解.</p><p>y总代码:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll x;</span><br><span class="line"><span class="type">int</span> res = INF;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(ll x,<span class="type">int</span> d)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="type">bool</span> st[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    ll y = x;</span><br><span class="line">    <span class="keyword">while</span>(y)&#123;</span><br><span class="line">        cnt ++;</span><br><span class="line">        st[y % <span class="number">10</span>] = <span class="literal">true</span>;</span><br><span class="line">        y /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 剪枝</span></span><br><span class="line">    <span class="keyword">if</span>(d + n - cnt &gt;= res) <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">// 终止条件</span></span><br><span class="line">    <span class="keyword">if</span>(cnt == n)&#123;</span><br><span class="line">        res = d;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">9</span>;i &gt; <span class="number">1</span>;i --)&#123;</span><br><span class="line">        <span class="keyword">if</span>(st[i])&#123;</span><br><span class="line">            <span class="built_in">dfs</span>(x * i,d + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;x;</span><br><span class="line">    <span class="built_in">dfs</span>(x,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(res == INF) res = <span class="number">-1</span>;</span><br><span class="line">    cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行时间: 46 ms !!!!</p><p>还有一点:<a href="https://www.acwing.com/solution/content/173853/">这位大佬列出了各种用来优化的方法</a>.<br>但优化的太过了,运行时间又上去了.</p><h3 id="4869-异或值"><a href="#4869-异或值" class="headerlink" title="4869. 异或值"></a>4869. 异或值</h3><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230314/20230314_2.jpg" alt="异或值"></p><p>看完题目后,感觉上是要用Trie.不过这个东西太遥远了.忘记了!!!!</p><p><strong>基本上是Trie的模板题</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">3000010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> tr[N][<span class="number">2</span>],idx;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构造trie树</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">29</span>;~i;i --)&#123;</span><br><span class="line">        <span class="type">int</span> u = x &gt;&gt; i &amp; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(!tr[p][u]) tr[p][u] = ++ idx;</span><br><span class="line">        p = tr[p][u];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// p 节点 k 位数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = k;~i;i--)&#123;</span><br><span class="line">        <span class="comment">// 0 1都存在 最小值在该位上必为1 </span></span><br><span class="line">        <span class="keyword">if</span>(tr[p][<span class="number">1</span>] &amp;&amp; tr[p][<span class="number">0</span>])&#123;</span><br><span class="line">            res += <span class="number">1</span> &lt;&lt; i;</span><br><span class="line">            <span class="comment">// 找下一位结果最小值</span></span><br><span class="line">            res += <span class="built_in">min</span>(<span class="built_in">query</span>(tr[p][<span class="number">0</span>],i- <span class="number">1</span>),<span class="built_in">query</span>(tr[p][<span class="number">1</span>],i - <span class="number">1</span>));</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 只存在一个 最小值在该位必是0</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(tr[p][<span class="number">1</span>]) p = tr[p][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">else</span> p = tr[p][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">while</span>(n --)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        <span class="built_in">insert</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">query</span>(<span class="number">0</span>,<span class="number">29</span>)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>y总代码:<br>更有是为这道题设计的意味.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">3000010</span>, INF = <span class="number">2e9</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> tr[N][<span class="number">2</span>], idx;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">29</span>; i &gt;= <span class="number">0</span>; i -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> u = x &gt;&gt; i &amp; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (!tr[p][u]) tr[p][u] = ++ idx;</span><br><span class="line">        p = tr[p][u];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (d == <span class="number">-1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> f[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> p = tr[u][i];</span><br><span class="line">        <span class="keyword">if</span> (p) f[i] = <span class="built_in">dfs</span>(p, d - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> f[i] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> res = INF;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j ++ )</span><br><span class="line">            <span class="keyword">if</span> (f[j] != <span class="number">-1</span>)</span><br><span class="line">                t = <span class="built_in">max</span>(t, f[j] + ((i ^ j) &lt;&lt; d));</span><br><span class="line">        res = <span class="built_in">min</span>(res, t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">while</span> (n -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">        <span class="built_in">insert</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">dfs</span>(<span class="number">0</span>, <span class="number">29</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Acwing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日一题目录</title>
      <link href="/2023/03/13/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E7%9B%AE%E5%BD%95/"/>
      <url>/2023/03/13/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><font size=4><b>前言📝</b></font><br>归纳下各个网址下写过的每日一题.</p></div><h2 id="Acwing下"><a href="#Acwing下" class="headerlink" title="Acwing下"></a>Acwing下</h2>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日一题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Acwing第94场</title>
      <link href="/2023/03/13/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E5%91%A8%E8%B5%9B/Acwing%E7%AC%AC94%E5%9C%BA/"/>
      <url>/2023/03/13/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E5%91%A8%E8%B5%9B/Acwing%E7%AC%AC94%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><font size=4><b>前言📝</b></font><br>题目链接:<br><a href="https://www.acwing.com/activity/content/problem/content/8146/">AcWing 4870. 装物品</a><br><a href="https://www.acwing.com/activity/content/problem/content/8147/">AcWing 4871. 最早时刻</a><br><a href="https://www.acwing.com/activity/content/problem/content/8148/">AcWing 4872. 最短路之和</a></p></div><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h3 id="4870-装物品"><a href="#4870-装物品" class="headerlink" title="4870. 装物品"></a>4870. 装物品</h3><p>签到题:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">if</span>(n % <span class="number">5</span>)&#123;</span><br><span class="line">        cout&lt;&lt;n / <span class="number">5</span> + <span class="number">1</span> &lt;&lt;endl;</span><br><span class="line">    &#125;<span class="keyword">else</span> cout&lt;&lt;n / <span class="number">5</span> &lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>还有一种更快的写法: <code>(n + 4) / 5</code>.</p><h3 id="4871-最早时刻"><a href="#4871-最早时刻" class="headerlink" title="4871. 最早时刻"></a>4871. 最早时刻</h3><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230313/20230313_1.jpg" alt="最早时刻"></p><div class="note success no-icon flat"><p>很容易辨别出,这道题是 单源最短路的变种.<br>由于没有负边,等待时间也不可能为负, 所以可以使用<code>dijkstra</code>或<code>spfa</code>算法.<br>不过y总说: <code>10^5</code>很可能会卡spfa.</p></div><h4 id="dijkstra解法"><a href="#dijkstra解法" class="headerlink" title="dijkstra解法"></a>dijkstra解法</h4><p>代码:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>,M = <span class="number">2</span> * N,INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> h[N],e[M],w[M],ne[M],idx;</span><br><span class="line"><span class="type">int</span> d[N];</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; stop[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span>&#123;</span><br><span class="line">    e[idx] = b;</span><br><span class="line">    w[idx] = c;</span><br><span class="line">    ne[idx] = h[a];</span><br><span class="line">    h[a] = idx ++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dijkstra</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(d,INF,<span class="keyword">sizeof</span> d);</span><br><span class="line">    priority_queue&lt;PII,vector&lt;PII&gt;,greater&lt;PII&gt;&gt; p;</span><br><span class="line">    d[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    p.<span class="built_in">push</span>(&#123;<span class="number">0</span>,<span class="number">1</span>&#125;);</span><br><span class="line">    <span class="keyword">while</span>(!p.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        <span class="keyword">auto</span> t = p.<span class="built_in">top</span>();</span><br><span class="line">        p.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="type">int</span> var = t.second;</span><br><span class="line">        <span class="keyword">if</span>(st[var]) <span class="keyword">continue</span>;</span><br><span class="line">        st[var] = <span class="literal">true</span>;</span><br><span class="line">        <span class="type">int</span> d_var = d[var];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>,len = stop[var].<span class="built_in">size</span>();i &lt; len;i ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(d_var == stop[var][i]) d_var ++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(stop[var][i] &gt; d_var) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = h[var];i != <span class="number">-1</span>;i = ne[i])&#123;</span><br><span class="line">            <span class="type">int</span> j = e[i];</span><br><span class="line">            <span class="keyword">if</span>(d[j] &gt; d_var + w[i])&#123;</span><br><span class="line">                d[j] = d_var + w[i];</span><br><span class="line">                p.<span class="built_in">push</span>(&#123;d[j],j&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(d[n] ==  INF) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> d[n];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="type">int</span> a,b,c;</span><br><span class="line">    <span class="keyword">while</span>(m --)&#123;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">        <span class="built_in">add</span>(a,b,c);</span><br><span class="line">        <span class="built_in">add</span>(b,a,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)&#123;</span><br><span class="line">        <span class="type">int</span> t,x;</span><br><span class="line">        cin&gt;&gt;t;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;j &lt; t;j ++)&#123;</span><br><span class="line">            cin&gt;&gt;x;</span><br><span class="line">            stop[i].<span class="built_in">push_back</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    cout&lt;&lt;<span class="built_in">dijkstra</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><div class="note info no-icon flat"><p>dijkstra特点:<br>每次只更新一点,每点只更新一次.<br>原理: 贪心.每次只用未确定最短路中最近的一点进行更新.</p><p><mark>dijkstra是站在 <strong>点</strong> 的角度求最短路 </mark></p></div></p><p>关于 停顿时间求解 的误区:<br>写法1:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新未更新的点</span></span><br><span class="line"><span class="keyword">if</span>(st[var]) <span class="keyword">continue</span>;</span><br><span class="line">st[var] = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">// 停顿时间求解</span></span><br><span class="line"><span class="type">int</span> d_var = d[var];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>,len = stop[var].<span class="built_in">size</span>();i &lt; len;i ++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(d_var == stop[var][i]) d_var ++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(stop[var][i] &gt; d_var) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>如果不这样写,则需要这样写.<br>写法2:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(st[var]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(var == n) <span class="keyword">break</span>;</span><br><span class="line">st[var] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>,len = stop[var].<span class="built_in">size</span>();i &lt; len;i ++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(d[var] == stop[var][i]) d[var] ++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(stop[var][i] &gt; d[var]) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>典型数据:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2 1</span><br><span class="line">1 2 3</span><br><span class="line">0</span><br><span class="line">1 3</span><br><span class="line">答案: 3</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>很容易可以对比出来: <font color=red>要么用新变量<code>d_var</code>更新.要么特判第n点不要有等待时间</font>.</p><p>同时,这部分也可以通过二分优化.不过由于数量很少,这里就不做对应的优化了!</p><h4 id="spfa解法"><a href="#spfa解法" class="headerlink" title="spfa解法"></a>spfa解法</h4><p>思路基本相同.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>,M = <span class="number">2</span> * N,INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> h[N],e[M],w[M],ne[M],idx;</span><br><span class="line"><span class="type">int</span> d[N];</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; stop[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span>&#123;</span><br><span class="line">    e[idx] = b;</span><br><span class="line">    w[idx] = c;</span><br><span class="line">    ne[idx] = h[a];</span><br><span class="line">    h[a] = idx ++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">spfa</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(d,INF,<span class="keyword">sizeof</span> d);</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    d[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    q.<span class="built_in">push</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 入队标记</span></span><br><span class="line">    st[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        <span class="type">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="comment">// 出队标记</span></span><br><span class="line">        st[t] = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 求停顿时间</span></span><br><span class="line">        <span class="type">int</span> t_dist = d[t];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>,len = stop[t].<span class="built_in">size</span>();i &lt; len;i ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(t_dist == stop[t][i]) t_dist ++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(stop[t][i] &gt; t_dist) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = h[t];i != <span class="number">-1</span>;i = ne[i])&#123;</span><br><span class="line">            <span class="type">int</span> j = e[i];</span><br><span class="line">            <span class="keyword">if</span>(d[j] &gt; t_dist + w[i])&#123;</span><br><span class="line">                d[j] = t_dist + w[i];</span><br><span class="line">                <span class="keyword">if</span>(!st[j])&#123;</span><br><span class="line">                    q.<span class="built_in">push</span>(j);</span><br><span class="line">                    st[j] = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(d[n] == INF) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> d[n];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="type">int</span> a,b,c;</span><br><span class="line">    <span class="keyword">while</span>(m --)&#123;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">        <span class="built_in">add</span>(a,b,c);</span><br><span class="line">        <span class="built_in">add</span>(b,a,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)&#123;</span><br><span class="line">        <span class="type">int</span> t,x;</span><br><span class="line">        cin&gt;&gt;t;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;j &lt; t;j ++)&#123;</span><br><span class="line">            cin&gt;&gt;x;</span><br><span class="line">            stop[i].<span class="built_in">push_back</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    cout&lt;&lt;<span class="built_in">spfa</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>spfa特点:<br>spfa是从Bellman_fold队列优化而来的,不过spfa不能处理有负环的图.<br>spfa常常用来判断图中是否有负环.</p><p><mark>spfa是站在 <strong>边</strong> 的角度求解最短路</mark></p></div><p>关于 停顿时间求解 的误区:</p><p>如果使用spfa,则我们不能通过 指定某个点不更新的方式 来求停顿时间.<br>只能使用新变量保存的方式 来求停顿时间.<br>原因: spfa是面向边的. 因此spfa求解过程中,点可能多次入队.</p><p>典型的数据:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">4 6</span><br><span class="line">1 2 2</span><br><span class="line">1 3 3</span><br><span class="line">1 4 8</span><br><span class="line">2 3 4</span><br><span class="line">2 4 5</span><br><span class="line">3 4 3</span><br><span class="line">0</span><br><span class="line">1 3</span><br><span class="line">2 3 4</span><br><span class="line">0</span><br><span class="line">答案: 7</span><br></pre></td></tr></table></figure></p><h3 id="4872-最短路之和"><a href="#4872-最短路之和" class="headerlink" title="4872. 最短路之和"></a>4872. 最短路之和</h3><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230313/20230313_2.jpg" alt="4872. 最短路之和"></p><div class="note success no-icon flat"><p>不难从题目描述中得知:<br>本题使用Floyd 算法.Floyd是当前学到的唯一一个可以解决多源最短路问题的算法.</p></div><p>这道题如果从正面解,不仅每次删除数据很麻烦,还需要多次调动Floyd算法.<br>非常的费时间,同时也容易出错.<br><wavy>但如果我们反过来考虑: 每次加入一个点呢</wavy>.</p><div class="note info no-icon flat"><p>如果每次多加一个点.<br>在Floyd算法的推导过程中知道:<br><code>dp[k][i][j]</code>表示从 i 到 j 只经过 不超过 k的点 的最短路</p><p>完美的契合Floyd的推导. </p></div><p>代码:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">510</span>;</span><br><span class="line"></span><br><span class="line">ll d[N][N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> x[N];</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line">ll ans[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= n;j ++)</span><br><span class="line">            cin&gt;&gt;d[i][j];</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++) cin&gt;&gt;x[i];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// floyd的变种</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> u = n;u;u --)&#123;</span><br><span class="line">        <span class="type">int</span> k = x[u];</span><br><span class="line">        st[k] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= n;j ++)</span><br><span class="line">                d[i][j] = <span class="built_in">min</span>(d[i][j],d[i][k] + d[k][j]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= n;j ++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(st[i] &amp;&amp; st[j])&#123;</span><br><span class="line">                    ans[u] += d[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++) cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><div class="note success no-icon flat"><p>这道题可以看作为 脑筋急转弯.<br>同时需要对 floyd算法 的推导过程熟悉掌握.</p></div>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Acwing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开个新坑</title>
      <link href="/2023/03/13/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/%E5%BC%80%E4%B8%AA%E6%96%B0%E5%9D%91%E5%86%99%E5%91%A8%E8%B5%9B/"/>
      <url>/2023/03/13/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/%E5%BC%80%E4%B8%AA%E6%96%B0%E5%9D%91%E5%86%99%E5%91%A8%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><font size=4><b>前言📝</b></font><br>开始写周赛了,这里放个总目录吧!</p></div><h2 id="Acwing部分"><a href="#Acwing部分" class="headerlink" title="Acwing部分"></a>Acwing部分</h2><p><a href="https://qvq-ovo.github.io/2023/03/13/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/Acwing%E5%91%A8%E8%B5%9B/Acwing%E7%AC%AC94%E5%9C%BA/">Acwing第94场</a></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python使用selenium爬取自习时间</title>
      <link href="/2023/03/06/%E8%87%AA%E5%8A%A8%E5%8C%96/python%E4%BD%BF%E7%94%A8selenium%E7%88%AC%E5%8F%96%E8%87%AA%E4%B9%A0%E6%97%B6%E9%97%B4/"/>
      <url>/2023/03/06/%E8%87%AA%E5%8A%A8%E5%8C%96/python%E4%BD%BF%E7%94%A8selenium%E7%88%AC%E5%8F%96%E8%87%AA%E4%B9%A0%E6%97%B6%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><font size=4><b>前言📝</b></font><br>学校更新了自习系统,新的自习系统没有学习时间自动统计功能.<br>不过网站上登录后可以获取每次自习时间上的细节.<br>所以,使用selenium爬取对应数据,自己在本地实现统计.嘻嘻</p></div><h2 id="selenium模拟浏览器操作"><a href="#selenium模拟浏览器操作" class="headerlink" title="selenium模拟浏览器操作"></a>selenium模拟浏览器操作</h2><div class="note info no-icon flat"><p>本来打算使用<code>requests</code>来爬取的,奈何本人太废.根本分析不过来.<br>不得不说,selenium是真的强.</p></div><h3 id="安装selenium"><a href="#安装selenium" class="headerlink" title="安装selenium"></a>安装selenium</h3><p>python:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install selenium</span><br></pre></td></tr></table></figure><br>必须给本地浏览器安装对应的驱动器:</p><p>1: 谷歌浏览器驱动: <a href="http://chromedriver.storage.googleapis.com/index.html">http://chromedriver.storage.googleapis.com/index.html</a><br>2: 火狐浏览器驱动: <a href="https://github.com/mozilla/geckodriver/releases">https://github.com/mozilla/geckodriver/releases</a></p><p><u>记得下载对应的版本,至少是能相互兼容的.</u></p><h3 id="模拟登录"><a href="#模拟登录" class="headerlink" title="模拟登录"></a>模拟登录</h3><p>使用<code>selenium</code>模拟用户操作,真的是直接模仿用户操作.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录网址</span></span><br><span class="line">first_url = <span class="string">&#x27;xxxx&#x27;</span></span><br><span class="line"><span class="comment"># 数据所在页面</span></span><br><span class="line">target_url = <span class="string">&#x27;xxxx&#x27;</span></span><br><span class="line"></span><br><span class="line">user = <span class="string">&quot;xxx&quot;</span></span><br><span class="line">password = <span class="string">&quot;xxxx&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录网站</span></span><br><span class="line">browser.get(first_url)</span><br><span class="line"><span class="comment">#  等待</span></span><br><span class="line">time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟登录</span></span><br><span class="line">browser.find_element(By.ID,<span class="string">&quot;username&quot;</span>).send_keys(user)</span><br><span class="line">browser.find_element(By.ID,<span class="string">&quot;password&quot;</span>).send_keys(password)</span><br><span class="line">browser.find_element(By.ID,<span class="string">&quot;login_submit&quot;</span>).click()</span><br><span class="line"><span class="comment">#  等待</span></span><br><span class="line">time.sleep(<span class="number">2.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断是否登录成功</span></span><br><span class="line">element_existance = <span class="literal">True</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    browser.find_element(By.XPATH,<span class="string">&quot;//div[@role=&#x27;tab&#x27; and @class=&#x27;van-tabbar-item&#x27;]&quot;</span>).click()</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    element_existance = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> element_existance == <span class="literal">False</span> :</span><br><span class="line">    browser.close()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;No&quot;</span>)</span><br><span class="line">    exit()</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note success no-icon flat"><p>注意:<br>代码中类似于<code>By.ID</code>,<code>By.XPATH</code>用于定位操作元素.<br>如果网页更新或更换不同的网址,都需要重新配置.</p></div><h3 id="通过日志获取数据"><a href="#通过日志获取数据" class="headerlink" title="通过日志获取数据"></a>通过日志获取数据</h3><div class="note info no-icon flat"><p>想要更简单有效的获取数据,单单模拟点击之类肯定是不够用的.<br>必须要拿到关键的xhr包.</p></div><p>这一步网上有很多操作方法.<br>我选择这一种: <a href="https://blog.csdn.net/weixin_45081575/article/details/126551260">【Selenium】Selenium获取Network数据（高级版）</a></p><p>写的是真的好,我现在也没时间优化它.</p><p>开启对应配置:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">caps = &#123;</span><br><span class="line">    <span class="string">&quot;browserName&quot;</span>: <span class="string">&quot;chrome&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;goog:loggingPrefs&#x27;</span>: &#123;<span class="string">&#x27;performance&#x27;</span>: <span class="string">&#x27;ALL&#x27;</span>&#125;  <span class="comment"># 开启日志性能监听</span></span><br><span class="line">&#125;</span><br><span class="line">chrome_options = Options()</span><br><span class="line"><span class="comment"># 开启无头模式</span></span><br><span class="line">chrome_options.add_argument(<span class="string">&#x27;--headless&#x27;</span>)</span><br><span class="line">chrome_options.add_argument(<span class="string">&#x27;--no-sandbox&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动浏览器</span></span><br><span class="line">browser = webdriver.Chrome(desired_capabilities=caps,options=chrome_options)</span><br><span class="line"><span class="comment"># 访问url</span></span><br><span class="line">browser.get(first_url)</span><br></pre></td></tr></table></figure><br><div class="note success no-icon flat"><p>无头浏览器: 不显示窗口.直接在内存中处理浏览数据.</p></div></p><p>有了日志监听,很容易就能定位我要访问的网址返回的数据:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 过滤资源</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">filter_type</span>(<span class="params">_<span class="built_in">type</span>: <span class="built_in">str</span></span>):</span><br><span class="line">    types = [</span><br><span class="line">        <span class="string">&#x27;application/javascript&#x27;</span>, <span class="string">&#x27;application/x-javascript&#x27;</span>, <span class="string">&#x27;text/css&#x27;</span>, <span class="string">&#x27;webp&#x27;</span>, <span class="string">&#x27;image/png&#x27;</span>, <span class="string">&#x27;image/gif&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;image/jpeg&#x27;</span>, <span class="string">&#x27;image/x-icon&#x27;</span>, <span class="string">&#x27;application/octet-stream&#x27;</span></span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">if</span> _<span class="built_in">type</span> <span class="keyword">not</span> <span class="keyword">in</span> types:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取名称为 performance 的日志</span></span><br><span class="line">performance_log = browser.get_log(<span class="string">&#x27;performance&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> packet <span class="keyword">in</span> performance_log:</span><br><span class="line">    message = json.loads(packet.get(<span class="string">&#x27;message&#x27;</span>)).get(<span class="string">&#x27;message&#x27;</span>)  <span class="comment"># 获取message的数据</span></span><br><span class="line">    <span class="keyword">if</span> message.get(<span class="string">&#x27;method&#x27;</span>) != <span class="string">&#x27;Network.responseReceived&#x27;</span>:  <span class="comment"># 如果method 不是 responseReceived 类型就不往下执行</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    packet_type = message.get(<span class="string">&#x27;params&#x27;</span>).get(<span class="string">&#x27;response&#x27;</span>).get(<span class="string">&#x27;mimeType&#x27;</span>)  <span class="comment"># 获取该请求返回的type</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> filter_type(_<span class="built_in">type</span>=packet_type):  <span class="comment"># 过滤type</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    requestId = message.get(<span class="string">&#x27;params&#x27;</span>).get(<span class="string">&#x27;requestId&#x27;</span>)  <span class="comment"># 唯一的请求标识符。相当于该请求的身份证</span></span><br><span class="line">    url = message.get(<span class="string">&#x27;params&#x27;</span>).get(<span class="string">&#x27;response&#x27;</span>).get(<span class="string">&#x27;url&#x27;</span>)  <span class="comment"># 获取 该请求  url</span></span><br><span class="line">    <span class="comment"># 判断是否是我们想要的</span></span><br><span class="line">    <span class="keyword">if</span> url == target_url :</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># selenium调用 cdp</span></span><br><span class="line">            resp = browser.execute_cdp_cmd(<span class="string">&#x27;Network.getResponseBody&#x27;</span>, &#123;<span class="string">&#x27;requestId&#x27;</span>: requestId&#125;)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;type: <span class="subst">&#123;packet_type&#125;</span> url: <span class="subst">&#123;url&#125;</span>&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;resp[<span class="string">&quot;body&quot;</span>]&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 这里可以编写处理数据代码</span></span><br><span class="line"></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Success&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> WebDriverException:  <span class="comment"># 忽略异常</span></span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h2 id="其他操作-保存与自动化"><a href="#其他操作-保存与自动化" class="headerlink" title="其他操作: 保存与自动化"></a>其他操作: 保存与自动化</h2><h3 id="数据的保存"><a href="#数据的保存" class="headerlink" title="数据的保存"></a>数据的保存</h3><p>因为需要获取: 当天日期, 每天自习时长.<br>所以这里选择保存为<code>csv</code>文件格式.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 保存信息 csv</span></span><br><span class="line">csv_file = <span class="built_in">open</span>(<span class="string">&#x27;./Alldata.csv&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,newline=<span class="string">&#x27;&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">writer = csv.writer(csv_file)</span><br><span class="line"><span class="comment"># 标题</span></span><br><span class="line">writer.writerow([<span class="string">&#x27;日期&#x27;</span>,<span class="string">&#x27;使用时间&#x27;</span>])</span><br></pre></td></tr></table></figure><p>剩下的只需要把<code>print(...)</code>换成<code>writer.writerow([..,..])</code>.</p><h3 id="自动化"><a href="#自动化" class="headerlink" title="自动化"></a>自动化</h3><p>欸,没准我可以将这些部署在服务器上,全部自动化操作.<br>下次再试,可能需要配合前面的 <strong>spring项目整合</strong> .</p><p>未完待续…</p>]]></content>
      
      
      <categories>
          
          <category> 自动化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSM框架整合</title>
      <link href="/2023/01/25/SSM%E5%AD%A6%E4%B9%A0/SSM%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88/"/>
      <url>/2023/01/25/SSM%E5%AD%A6%E4%B9%A0/SSM%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><font size=4><b>前言📝</b></font><br>虽然零零散散的学了些SSM相干的知识,但过了太久也忘得差不多了.<br>这里再跟着狂神学习下SSM整合框架的基本搭建流程.<br>同时实现项目一些简单操作.</p><p>参考资料:<br><a href="https://mp.weixin.qq.com/s/SDxqGu_il3MUCTcN1EYrng">狂神说SpringMVC05：整合SSM框架</a><br><a href="https://www.bilibili.com/video/BV1RE41127rv?p=1">狂神说Java SSM框架最新整合教学IDEA版</a></p><p>相关环境:</p><ul><li>IDEA2021.2.1</li><li>MySQL8.0+</li><li>Tomcat9.0</li><li>Maven3.8</li><li>Jdk8</li></ul></div><h2 id="一-i搭建项目数据库"><a href="#一-i搭建项目数据库" class="headerlink" title="一. i搭建项目数据库"></a>一. i搭建项目数据库</h2><p>本项目创建一个存放书籍信息的书籍库:</p><p>创建数据表+插入信息:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `ssmbuild`;</span><br><span class="line"></span><br><span class="line">USE `ssmbuild`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `books`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `books` (</span><br><span class="line">`bookID` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;书id&#x27;</span>,</span><br><span class="line">`bookName` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;书名&#x27;</span>,</span><br><span class="line">`bookCounts` <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;数量&#x27;</span>,</span><br><span class="line">`detail` <span class="type">VARCHAR</span>(<span class="number">200</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;描述&#x27;</span>,</span><br><span class="line">KEY `bookID` (`bookID`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span>  <span class="keyword">INTO</span> `books`(`bookID`,`bookName`,`bookCounts`,`detail`)<span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>,<span class="string">&#x27;Java&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;从入门到放弃&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;MySQL&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;从删库到跑路&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;Linux&#x27;</span>,<span class="number">5</span>,<span class="string">&#x27;从进门到进牢&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h2 id="二-idea搭建基本环境"><a href="#二-idea搭建基本环境" class="headerlink" title="二. idea搭建基本环境"></a>二. idea搭建基本环境</h2><p>首先搭建Maven空项目<br><div class="note success no-icon flat"><p>Maven中有很多项目骨架.<br>选择后可以直接生成项目框架.<br>这里为了学习,选择从空项目搭建.</p></div></p><p>项目名:<code>BookProject</code></p><h3 id="2-1-配置pom-xml"><a href="#2-1-配置pom-xml" class="headerlink" title="2.1 配置pom.xml"></a>2.1 配置pom.xml</h3><p>配置项目所需要的依赖包和解决静态资源导出问题.</p><p>依赖配置:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Junit--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--数据库驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 数据库连接池: c3p0很老了 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Servlet - JSP --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Mybatis--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Spring--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>配置静态资源导出解决办法:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--静态资源导出--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>使用Maven就是方便导包,同时也方便看清楚包之间的关系:</p><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230125/20230125_1.jpg" alt="jar包关系图" style="zoom:80%;" /></p><h3 id="2-2-创建包和配置xml文件"><a href="#2-2-创建包和配置xml文件" class="headerlink" title="2.2 创建包和配置xml文件"></a>2.2 创建包和配置xml文件</h3><p>创建成功后项目结构:<br><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230125/20230125_2.jpg" alt="jar包关系图" style="zoom:60%;" /></p><p>applicationContext.xml配置:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br>mybatis-config.xml配置:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><div class="note success no-icon flat"><p>两个基本模板:<br>applicationContext.xml基本模板<br>mybatis-config.xml基本模板<br>(写这个方便检索)</p></div></p><h2 id="三-Mybatis整合配置"><a href="#三-Mybatis整合配置" class="headerlink" title="三. Mybatis整合配置"></a>三. Mybatis整合配置</h2><p>对应视频1: 整合Mybatis层</p><h3 id="3-1-配置数据库连接文件"><a href="#3-1-配置数据库连接文件" class="headerlink" title="3.1 配置数据库连接文件"></a>3.1 配置数据库连接文件</h3><p>文件名: <code>database.properties</code><br>内容:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jdbc.driver=com.mysql.cj.jdbc.Driver</span><br><span class="line">jdbc.url=jdbc:mysql://localhost:3306/ssmbuild?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=Asia/Shanghai</span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=1123@.com</span><br></pre></td></tr></table></figure><br>这里我使用的MySQL8.0+,所以jdbc.url必须配置时区.</p><h3 id="3-2-idea导入Lombok"><a href="#3-2-idea导入Lombok" class="headerlink" title="3.2 idea导入Lombok"></a>3.2 idea导入Lombok</h3><p><strong>Lombok作用</strong>: 通过简单的注解的形式来帮助我们简化消除一些必须有但显得很臃肿的Java代码的工具.<br>简单来说:<br>当我们新建了一个类,然后在其中写了几个字段,通常情况下我们需要手动去建立getter和setter方法,构造函数啊之类的.<br>而lombok的作用就是为了省去我们手动创建这些代码的麻烦,它能够在我们编译源码的时候自动帮我们生成这些方法.</p><p><strong>导入过程:</strong><br>不仅需要<u>项目中导入Lombok依赖</u>,<u>idea也需要安装Lombok插件</u>.</p><p>项目导入Lombok依赖:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="3-3-编写pojo类"><a href="#3-3-编写pojo类" class="headerlink" title="3.3 编写pojo类"></a>3.3 编写pojo类</h3><p>有了Lombok的支持,pojo类可以摆脱臃肿的类方法:</p><p>Books类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Books</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> bookID;</span><br><span class="line">    <span class="keyword">private</span> String bookName;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> bookCounts;</span><br><span class="line">    <span class="keyword">private</span> String detail;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>添加完三个Lombok的注释后,可以在Structure(idea左下角)看到添加的方法:<br><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230125/20230125_3.jpg" alt="未加载图片" style="zoom:80%;" /></p><div class="note success no-icon flat"><p><strong>Lombok关于javaBean常用注解</strong>:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span> <span class="comment">// ToString,get/set...方法</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span> <span class="comment">// 全参构造</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span> <span class="comment">// 无参构造</span></span><br></pre></td></tr></table></figure><br>网上可以搜索到更多其他方法.</p></div><h3 id="3-4-编写dao层接口-xml配置"><a href="#3-4-编写dao层接口-xml配置" class="headerlink" title="3.4 编写dao层接口 + xml配置"></a>3.4 编写dao层接口 + xml配置</h3><p>dao层一般只提供对pojo的基本操作: 增删改查.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 增</span></span><br><span class="line">    <span class="comment">// 添加一本书</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">addBook</span><span class="params">(Books books)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删</span></span><br><span class="line">    <span class="comment">// 删除一本书</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">delBookById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 改</span></span><br><span class="line">    <span class="comment">// 更新一本书</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateBookById</span><span class="params">(Books books)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查</span></span><br><span class="line">    <span class="comment">// 查询一本书</span></span><br><span class="line">    Books <span class="title function_">queryBookById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询所有书</span></span><br><span class="line">    List&lt;Books&gt; <span class="title function_">queryAllBook</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同时在dao包下编写对应的xml配置文件.</p><p>BookMapper接口对应的<code>BookMapper.xml</code>:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.li.dao.BookMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--增--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--添加一本书--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addBook&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Books&quot;</span>&gt;</span></span><br><span class="line">        insert into ssmbuild.books (bookName, bookCounts, detail)</span><br><span class="line">        values (#&#123;bookName&#125;,#&#123;bookCounts&#125;,#&#123;detail&#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--删--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--删除一本书--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;delBookById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        delete from ssmbuild.books where bookID = #&#123;bookId&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--改--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--更新一本书--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateBookById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Books&quot;</span>&gt;</span></span><br><span class="line">        update ssmbuild.books</span><br><span class="line">        set bookName = #&#123;bookName&#125;, bookCounts=#&#123;bookCounts&#125;,detail=#&#123;detail&#125;</span><br><span class="line">        where bookID=#&#123;bookID&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询一本书--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBookById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Books&quot;</span>&gt;</span></span><br><span class="line">        select * from ssmbuild.books where bookID=#&#123;bookId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有书--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryAllBook&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Books&quot;</span>&gt;</span></span><br><span class="line">        select * from ssmbuild.books;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>这里由于<code>BookMapper.xml</code>中参数和<code>BookMapper</code>中不一致.所以对<code>BookMapper</code>中参数添加注释:<br>主要就是这两个.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删</span></span><br><span class="line"><span class="comment">// 删除一本书</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">delBookById</span><span class="params">(<span class="meta">@Param(&quot;bookId&quot;)</span> <span class="type">int</span> id)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查</span></span><br><span class="line"><span class="comment">// 查询一本书</span></span><br><span class="line">Books <span class="title function_">queryBookById</span><span class="params">(<span class="meta">@Param(&quot;bookId&quot;)</span> <span class="type">int</span> id)</span>;</span><br></pre></td></tr></table></figure></p><p>同时,<code>BookMapper.xml</code>中使用的是<code>Books</code>的别名,我们在Mybatis的主配置文件中添加相关支持:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.li.pojo&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><br><div class="note info no-icon flat"><p>如果不配置别名,那么在<code>BookMapper.xml</code>中需要将所有的<code>resultType=&quot;Books&quot;</code>改为全路径名.</p></div></p><p>Mapper.xml基本模板和Mabatis-config.xml基本模板很相似.但这里我分开记忆!<br><strong>Mapper.xml基本模板:</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></p><div class="note success no-icon flat"><p>不太重要的模板:<br>Mapper.xml基本模板</p></div><h3 id="3-5-service层接口-功能实现类"><a href="#3-5-service层接口-功能实现类" class="headerlink" title="3.5 service层接口 + 功能实现类"></a>3.5 service层接口 + 功能实现类</h3><p>service层使用dao层的方法进行组合形成暴露在外的功能.</p><p>我们这里只是学习就不编写复杂的功能,就简单的将dao层基本功能都实现下.</p><p><strong>接口</strong>:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 增</span></span><br><span class="line">    <span class="comment">// 添加一本书</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">addBook</span><span class="params">(Books books)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删</span></span><br><span class="line">    <span class="comment">// 删除一本书</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">delBookById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 改</span></span><br><span class="line">    <span class="comment">// 更新一本书</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">updateBookById</span><span class="params">(Books books)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查</span></span><br><span class="line">    <span class="comment">// 查询一本书</span></span><br><span class="line">    Books <span class="title function_">queryBookById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询所有书</span></span><br><span class="line">    List&lt;Books&gt; <span class="title function_">queryAllBook</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p><strong>功能实现类</strong>:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用dao层的操作，设置一个set接口，方便Spring管理</span></span><br><span class="line">    <span class="keyword">private</span> BookMapper bookMapper;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBookMapper</span><span class="params">(BookMapper bookMapper)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.bookMapper = bookMapper;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">addBook</span><span class="params">(Books book)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span>  bookMapper.addBook(book);</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">delBookById</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> bookMapper.delBookById(id);</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">updateBookById</span><span class="params">(Books books)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> bookMapper.updateBookById(books);</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Books <span class="title function_">queryBookById</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bookMapper.queryBookById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Books&gt; <span class="title function_">queryAllBook</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bookMapper.queryAllBook();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><div class="note danger no-icon flat"><p>service层实现类<strong>易忘点</strong>:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// service层调用deo层: 组合dao</span></span><br><span class="line"><span class="keyword">private</span> BookMapper bookMapper;</span><br><span class="line"><span class="comment">// 用于set注入</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBookMapper</span><span class="params">(BookMapper bookMapper)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.bookMapper = bookMapper;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这一步,即方便之后项目的功能扩展,也使得当前项目功能多样化得到保证.</p></div><h2 id="四-Spring整合配置"><a href="#四-Spring整合配置" class="headerlink" title="四. Spring整合配置"></a>四. Spring整合配置</h2><p>spring用来管理dao层,service层.</p><h3 id="4-1-配置对dao层管理的xml文件"><a href="#4-1-配置对dao层管理的xml文件" class="headerlink" title="4.1 配置对dao层管理的xml文件"></a>4.1 配置对dao层管理的xml文件</h3><p>Spring对dao层管理<strong>操作步骤</strong>:</p><div class='checkbox cyan checked'><input type="radio" checked="checked"/>            <p>关联数据库文件</p>            </div><div class='checkbox cyan checked'><input type="radio" checked="checked"/>            <p>配置数据库连接池</p>            </div><div class='checkbox cyan checked'><input type="radio" checked="checked"/>            <p>配置SqlSessionFactory对象</p>            </div><div class='checkbox cyan checked'><input type="radio" checked="checked"/>            <p>配置扫描Dao接口包，动态实现Dao接口注入到spring容器中</p>            </div><p>文件名:<code>spring-dao.xml</code>.(方便区分)</p><div class="note success no-icon flat"><p>idea可以选择spring模板创建,不过要记得添加到applicationContext.xml主配置文件中进行关联.</p></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">       https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--1. 关联数据库文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:database.properties&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--2. 配置连接池--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--这里我们配置c3p0数据池 (druid,hikari这两个池子是常用的)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--所有池子的公共操作--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--c3p0独有配置--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minPoolSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 关闭连接后不自动commit --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;autoCommitOnClose&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 获取连接超时时间 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;checkoutTimeout&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10000&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 当获取连接失败重试次数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;acquireRetryAttempts&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--3. sqlSessionFactory对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--绑定mybatis配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis-config.xml&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--4. 配置dao接口扫描包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--1.注入 sqlSessionFactory --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactoryBeanName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--2.扫描 对应dao包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.li.dao&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p><strong>连接池相关知识</strong>:<br>dbcp: 半自动化操作 不能自动连接<br>c3p0: 自动化操作(自动的加载配置文件 并且设置到对象里面)<br>druid,hikari 大公司用的</p></div><h3 id="4-2-配置对service层管理的xml文件"><a href="#4-2-配置对service层管理的xml文件" class="headerlink" title="4.2 配置对service层管理的xml文件"></a>4.2 配置对service层管理的xml文件</h3><div class='checkbox blue checked'><input type="radio" checked="checked"/>            <p>扫描service下的包</p>            </div><div class='checkbox blue checked'><input type="radio" checked="checked"/>            <p>将业务实现类注入到Spring容器(这里采用配置注入)</p>            </div><div class='checkbox blue checked'><input type="radio" checked="checked"/>            <p>声明式事务配置</p>            </div><div class='checkbox blue'><input type="radio" />            <p>开启aop事务支持</p>            </div><p>文件名: <code>spring-service.xml</code>.(方便区分)</p><p>同样也需要关联applicationContext.xml主配置.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">       https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--1. 扫描service下的包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.li.service&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--2. 将业务类注入到Spring, 这里采用配置注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;BookServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.service.impl.BookServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;bookMapper&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;bookMapper&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--3. 声明式事务配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSourceTransactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--注入数据源--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果单单这样配置是会爆红的:<br><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230125/20230125_4.jpg" alt="未加载展示的内容" style="zoom:80%;" /></p><p>这是由于<code>spring-dao.xml</code>和<code>spring-service.xml</code>两者之间没有关联到一起.</p><p>这里使用主配置文件进行关联:</p><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230125/20230125_5.jpg" alt="主配置文件关联" style="zoom:80%;" /></p><p>如果不用主配置,可以采取注解的方法代替配置注入:</p><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230125/20230125_6.jpg" alt="注解关联" /></p><h2 id="五-SpringMVC整合配置"><a href="#五-SpringMVC整合配置" class="headerlink" title="五. SpringMVC整合配置"></a>五. SpringMVC整合配置</h2><p>SpringMVC是Spring中一个框架,用于解决WEB相关问题.</p><h3 id="5-1-添加web支持"><a href="#5-1-添加web支持" class="headerlink" title="5.1 添加web支持"></a>5.1 添加web支持</h3><p><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230125/20230125_8.jpg" alt="添加过程" style="zoom:80%;" /></p><p>添加后在根目录下多了个web文件夹,并标记为web.</p><div class="note info no-icon flat"><p><strong>不同创建区别:</strong><br>如果在建立Maven项目时,直接标记为web项目时,web文件夹是在src/main下与java同级.<br>而像这样建立空项目后标记为web项目,web文件夹是和src同级.</p></div><h3 id="5-2-springMVC配置的xml文件"><a href="#5-2-springMVC配置的xml文件" class="headerlink" title="5.2 springMVC配置的xml文件"></a>5.2 springMVC配置的xml文件</h3><p>文件名: <code>springMVC.xml</code></p><p>springMVC配置步骤:<br><div class='checkbox cyan checked'><input type="radio" checked="checked"/>            <p>注解驱动</p>            </div><br><div class='checkbox cyan checked'><input type="radio" checked="checked"/>            <p>静态资源过滤</p>            </div><br><div class='checkbox cyan checked'><input type="radio" checked="checked"/>            <p>扫描controller层</p>            </div><br><div class='checkbox cyan checked'><input type="radio" checked="checked"/>            <p>视图解析器</p>            </div></p><p>具体配置:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">       https://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">       https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--1.注解驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--2.静态资源过滤--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--3.扫描controller层--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.li.controller&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--4.视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--前缀--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--后缀--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>这里同样要将<code>springMVC.xml</code>与之前的配置进行相关联.<br>采取主配置关联方式:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">import</span> resource=<span class="string">&quot;classpath:springMVC.xml&quot;</span> /&gt;</span><br></pre></td></tr></table></figure></p><p>至此,相关xml依赖已经写完了:<br><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230125/20230125_7.jpg" alt="项目中依赖关系" style="zoom:80%;" /></p><h3 id="5-3-在web-xml中添加相关配置"><a href="#5-3-在web-xml中添加相关配置" class="headerlink" title="5.3 在web.xml中添加相关配置"></a>5.3 在web.xml中添加相关配置</h3><p>几个基本的配置:  DispatchServlet, 乱码过滤, Session.</p><p>配置情况:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--DispatchServlet--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springMVC.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--乱码过滤--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Session--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>15<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-4-功能实现"><a href="#5-4-功能实现" class="headerlink" title="5.4 功能实现"></a>5.4 功能实现</h3><h2 id="六-i整合感想"><a href="#六-i整合感想" class="headerlink" title="六. i整合感想"></a>六. i整合感想</h2><p><strong><font color=#FF0000>该项目非常值得收藏起来</font></strong>.</p>]]></content>
      
      
      <categories>
          
          <category> SSM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssm整合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编写脚本协助上传图片</title>
      <link href="/2023/01/15/%E8%87%AA%E5%8A%A8%E5%8C%96/%E7%BC%96%E5%86%99%E8%84%9A%E6%9C%AC%E5%8D%8F%E5%8A%A9%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/"/>
      <url>/2023/01/15/%E8%87%AA%E5%8A%A8%E5%8C%96/%E7%BC%96%E5%86%99%E8%84%9A%E6%9C%AC%E5%8D%8F%E5%8A%A9%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><font size=4><b>前言📝</b></font><br>由于貌似PicGo不能兼容vs code,使用PicGo方法并没有太方便.(自我感觉)<br>因此,我想到使用bat命令来实现git提交功能.</p></div><h2 id="1-bat实现自动生成目录"><a href="#1-bat实现自动生成目录" class="headerlink" title="1. bat实现自动生成目录"></a>1. bat实现自动生成目录</h2><p>为了方便图片处理, 我会将当天的图片都放在同一个文件夹中, 而现在使用bat命令来实现该功能.</p><h3 id="1-1-基础功能"><a href="#1-1-基础功能" class="headerlink" title="1.1 基础功能"></a>1.1 基础功能</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">::关闭显示</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line">::显示本地时间格式</span><br><span class="line">::<span class="built_in">echo</span> <span class="variable">%date%</span></span><br><span class="line">::周日 <span class="number">2023</span>/<span class="number">01</span>/<span class="number">15</span></span><br><span class="line"></span><br><span class="line">::dd=日期</span><br><span class="line"><span class="built_in">set</span> dd=<span class="variable">%date:~11,2%</span>  </span><br><span class="line">::mm=月份</span><br><span class="line"><span class="built_in">set</span> mm=<span class="variable">%date:~8,2%</span></span><br><span class="line">::yy=年份</span><br><span class="line"><span class="built_in">set</span> yy=<span class="variable">%date:~3,4%</span></span><br><span class="line">::folder=年月日</span><br><span class="line"><span class="built_in">set</span> folder=&quot;<span class="variable">%yy%</span><span class="variable">%mm%</span><span class="variable">%dd%</span>&quot;</span><br><span class="line"></span><br><span class="line">::创建文件夹</span><br><span class="line"><span class="built_in">md</span>  <span class="variable">%folder%</span></span><br><span class="line"></span><br><span class="line">::暂停，保持<span class="built_in">cmd</span>窗口，调试时方便信息查看，正常使用时可删除</span><br><span class="line">::<span class="built_in">pause</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-2-进一步偷懒"><a href="#1-2-进一步偷懒" class="headerlink" title="1.2 进一步偷懒"></a>1.2 进一步偷懒</h3><p>为了进一步方便图片重命名,可以进一步改造代码:新增保存信息至剪切板功能!<br>在上述代码后追加:<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">::新增保存到剪切板</span><br><span class="line"><span class="built_in">cd</span> D:\Blog_my\blog_img\blogImg\img\<span class="variable">%folder%</span></span><br><span class="line"></span><br><span class="line">::读取当前文件夹的文件个数</span><br><span class="line"><span class="keyword">for</span> /f &quot;delims=&quot; <span class="variable">%%a</span> <span class="keyword">in</span> (&#x27;<span class="built_in">dir</span> /b ^| <span class="built_in">find</span> /v /c &quot;&amp;#@&quot;&#x27;) <span class="keyword">do</span> (</span><br><span class="line">  <span class="built_in">set</span> count=<span class="variable">%%a</span></span><br><span class="line">)</span><br><span class="line">::个数加<span class="number">1</span></span><br><span class="line"><span class="built_in">set</span>/a count+=<span class="number">1</span></span><br><span class="line">::<span class="built_in">echo</span> <span class="variable">%count%</span></span><br><span class="line"></span><br><span class="line">::文件重命名格式</span><br><span class="line"><span class="built_in">set</span> file=&quot;<span class="variable">%yy%</span><span class="variable">%mm%</span><span class="variable">%dd%</span>_<span class="variable">%count%</span>&quot;</span><br><span class="line">::文件去除空格</span><br><span class="line"><span class="built_in">set</span> &quot;file=%file: =%&quot;</span><br><span class="line">::<span class="built_in">echo</span> <span class="variable">%file%</span></span><br><span class="line"></span><br><span class="line">:: 保存到剪切板中</span><br><span class="line"><span class="built_in">set</span>/p=<span class="variable">%file%</span>&lt;<span class="built_in">nul</span> | clip</span><br><span class="line"></span><br><span class="line">::暂停，保持<span class="built_in">cmd</span>窗口，调试时方便信息查看，正常使用时可删除</span><br><span class="line">::<span class="built_in">pause</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h3 id="1-3-全部代码和总结"><a href="#1-3-全部代码和总结" class="headerlink" title="1.3 全部代码和总结"></a>1.3 全部代码和总结</h3><p>全部代码:<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">::关闭显示</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line">::显示本地时间格式</span><br><span class="line">::<span class="built_in">echo</span> <span class="variable">%date%</span></span><br><span class="line">::周日 <span class="number">2023</span>/<span class="number">01</span>/<span class="number">15</span></span><br><span class="line"></span><br><span class="line">::dd=日期</span><br><span class="line"><span class="built_in">set</span> dd=<span class="variable">%date:~11,2%</span>  </span><br><span class="line">::mm=月份</span><br><span class="line"><span class="built_in">set</span> mm=<span class="variable">%date:~8,2%</span></span><br><span class="line">::yy=年份</span><br><span class="line"><span class="built_in">set</span> yy=<span class="variable">%date:~3,4%</span></span><br><span class="line">::folder=年月日</span><br><span class="line"><span class="built_in">set</span> folder=&quot;<span class="variable">%yy%</span><span class="variable">%mm%</span><span class="variable">%dd%</span>&quot;</span><br><span class="line"><span class="built_in">set</span> &quot;folder=%folder: =%&quot;</span><br><span class="line"></span><br><span class="line">::创建文件夹</span><br><span class="line"><span class="built_in">md</span>  <span class="variable">%folder%</span></span><br><span class="line"></span><br><span class="line">::新增保存到剪切板</span><br><span class="line"><span class="built_in">cd</span> D:\Blog_my\blog_img\blogImg\img\<span class="variable">%folder%</span></span><br><span class="line"></span><br><span class="line">::读取当前文件夹的文件个数</span><br><span class="line"><span class="keyword">for</span> /f &quot;delims=&quot; <span class="variable">%%a</span> <span class="keyword">in</span> (&#x27;<span class="built_in">dir</span> /b ^| <span class="built_in">find</span> /v /c &quot;&amp;#@&quot;&#x27;) <span class="keyword">do</span> (</span><br><span class="line">  <span class="built_in">set</span> count=<span class="variable">%%a</span></span><br><span class="line">)</span><br><span class="line">::个数加<span class="number">1</span></span><br><span class="line"><span class="built_in">set</span>/a count+=<span class="number">1</span></span><br><span class="line">::<span class="built_in">echo</span> <span class="variable">%count%</span></span><br><span class="line"></span><br><span class="line">::文件重命名格式</span><br><span class="line"><span class="built_in">set</span> file=&quot;<span class="variable">%yy%</span><span class="variable">%mm%</span><span class="variable">%dd%</span>_<span class="variable">%count%</span>&quot;</span><br><span class="line">::文件去除空格</span><br><span class="line"><span class="built_in">set</span> &quot;file=%file: =%&quot;</span><br><span class="line">::<span class="built_in">echo</span> <span class="variable">%file%</span></span><br><span class="line"></span><br><span class="line">:: 保存到剪切板中</span><br><span class="line"><span class="built_in">set</span>/p=<span class="variable">%file%</span>&lt;<span class="built_in">nul</span> | clip</span><br><span class="line"></span><br><span class="line">::暂停，保持<span class="built_in">cmd</span>窗口，调试时方便信息查看，正常使用时可删除</span><br><span class="line">::<span class="built_in">pause</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><strong>总结</strong>:<br>不同电脑中时间格式有所不同,需要自己微调一下.</p><p>相关链接:<br><a href="https://blog.csdn.net/weixin_42985452/article/details/113789487">Windows批处理(cmd/bat)快速新建文件夹</a>.<br><a href="https://blog.51cto.com/lexsaints/5094214">Bat 去掉变量字符串中的空格</a>.<br><a href="https://blog.csdn.net/x_iya/article/details/51794178">批处理将字符串输出到Windows剪贴板</a>.</p><h2 id="2-bat实现git自动提交"><a href="#2-bat实现git自动提交" class="headerlink" title="2. bat实现git自动提交"></a>2. bat实现git自动提交</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">cd</span> D:\Blog_my\blog_img\blogImg</span><br><span class="line"></span><br><span class="line">:: git命令</span><br><span class="line">git add . </span><br><span class="line">git commit -m &quot;更新图片&quot;</span><br><span class="line">git push </span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><p>相比上一个,非常简单.</p><h2 id="3-bat实现hexo三连"><a href="#3-bat实现hexo三连" class="headerlink" title="3. bat实现hexo三连"></a>3. bat实现hexo三连</h2><p>本地三连:<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">cd</span> D:\Blog_my\blog_hexo</span><br><span class="line"></span><br><span class="line">:: hexo三连</span><br><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><br>上传三连:<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">cd</span> D:\Blog_my\blog_hexo</span><br><span class="line"></span><br><span class="line">:: hexo三连</span><br><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></p><h2 id="4-使用"><a href="#4-使用" class="headerlink" title="4. 使用"></a>4. 使用</h2><p>一般先使用<code>按日期新建文件夹.bat</code>创建文件夹 和 生成新文件名.<br>博客编写完后,使用<code>本地三连.bat</code>检查博客,然后使用<code>上传三连.bat</code>实现博客上传.<br>最后使用<code>blog自动提交脚本.bat</code>实现git上传到github中.</p><h2 id="5-改进1-bat文件集中"><a href="#5-改进1-bat文件集中" class="headerlink" title="5. 改进1: bat文件集中"></a>5. 改进1: bat文件集中</h2><p>由于不同的bat文件在不同的文件夹下,为了更加方便的使用bat命令,我将它们都放入同一文件夹下了.</p><p>因此,<u>bat文件需要加上切换目录命令!</u><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:: 切换目录</span><br><span class="line">cd /d D:\Blog_my\blog_img\blogImg</span><br></pre></td></tr></table></figure></p><p>改进效果:<br><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230125/20230125_12.jpg" alt="未加载图片" style="zoom:80%;" /></p><h2 id="6-改进2-添加默认值"><a href="#6-改进2-添加默认值" class="headerlink" title="6. 改进2: 添加默认值"></a>6. 改进2: 添加默认值</h2><p>上传图片默认commit为”更新图片”.<br>其他情况输入为准.</p><p>代码:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">set /p var=输入描述:</span><br><span class="line"></span><br><span class="line">if &quot;%var%&quot;==&quot;&quot; set var=更新图片</span><br><span class="line">echo %var%</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 自动化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>破解相关(供学习使用)</title>
      <link href="/2023/01/14/%E7%A0%B4%E8%A7%A3%E7%9B%B8%E5%85%B3-%E4%BE%9B%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/01/14/%E7%A0%B4%E8%A7%A3%E7%9B%B8%E5%85%B3-%E4%BE%9B%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>该方法来自于公众号 <span class='p red'>终码一生</span> .<br>该公众号提供 临时激活码 , 半永久激活码 以及正版授权 .</p></div><h2 id="pycharm破解过程"><a href="#pycharm破解过程" class="headerlink" title="pycharm破解过程"></a>pycharm破解过程</h2><p>在公众号中下载对应文件 <mark>jihuo-tool-2022.3.zip</mark>.</p><p>按照教程执行对应文件.(在scipts文件夹下)</p><p>激活成功结果:<br><img src="https://cdn.staticaly.com/gh/qvq-ovo/blogImg/main/img/20230114/1.jpg" title="截图展示" alt="未加载成功" style="zoom:80%;" /></p><p>虽然没有到永远,至少能一两年安心使用.</p><h2 id="idea破解过程"><a href="#idea破解过程" class="headerlink" title="idea破解过程"></a>idea破解过程</h2><p>链接: <a href="http://www.itzoo.net/idea/intellij-idea2021-3-latest-version-login-free-crack-patch-permanent-crack-free-tutorial-filter-agent.html">IntelliJ IDEA2021.3 最新版本 免登陆破解补丁 永久破解 免费教程</a>.<br>目前来看,网上最好的.</p><p><strong>1:</strong> 先进入idea<br>使用免费激活码: <a href="http://idea.94goo.com">http://idea.94goo.com</a></p><p><strong>2:</strong> 添加补丁文件<br>打开菜单栏Help -&gt; Edit Custom VM Options…,<br>开始添加附件中下载的filter-agent.jar.</p><p>网页提供的备用方案: <a href="http://blog.idejihuo.com/jetbrains/how-do-i-add-agent-configuration-if-the-activation-code-is-invalid.html">另一种添加补丁的方式</a></p><p>网站关联的公众号是: 终码一生.<br>idea版本是2021.2.1</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python打包</title>
      <link href="/2023/01/14/%E8%87%AA%E5%8A%A8%E5%8C%96/python%E6%89%93%E5%8C%85/"/>
      <url>/2023/01/14/%E8%87%AA%E5%8A%A8%E5%8C%96/python%E6%89%93%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>先跟着b站<a href="">视频</a>学习相关知识.</p></div><h2 id="1-exe打包"><a href="#1-exe打包" class="headerlink" title="1. exe打包"></a>1. exe打包</h2><h3 id="1-1-安装第三方库-Pyinstaller"><a href="#1-1-安装第三方库-Pyinstaller" class="headerlink" title="1.1 安装第三方库 Pyinstaller"></a>1.1 安装第三方库 Pyinstaller</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip/conda install pytinstaller</span><br></pre></td></tr></table></figure><p>注意事项:</p><ul><li>不可跨平台,但支持mac win</li><li>在虚拟环境下打包(避开不必要的三方库)</li></ul><h3 id="1-2-打包成多文件"><a href="#1-2-打包成多文件" class="headerlink" title="1.2 打包成多文件"></a>1.2 打包成多文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -D py文件</span><br></pre></td></tr></table></figure><p>生成的<code>dist</code>目录下是我们需要的东西.至于<code>*.spec</code>,<code>build</code>文件夹 都是过程产物.<br>dist下.exe文件是我们所需要的</p>]]></content>
      
      
      <categories>
          
          <category> 打包 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring5-day2</title>
      <link href="/2023/01/13/SSM%E5%AD%A6%E4%B9%A0/spring5-day2/"/>
      <url>/2023/01/13/SSM%E5%AD%A6%E4%B9%A0/spring5-day2/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>学习以下知识点:</p><ul><li>set注入</li><li>单例模式(singleton),原型模式(prototype)</li><li>自动装配</li><li>通过<code>@Autowired</code>注释实现自动装配</li></ul></div><h3 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h3><h4 id="1-构造器注入"><a href="#1-构造器注入" class="headerlink" title="1.构造器注入"></a>1.构造器注入</h4><p>前面已经说过了(默认无参,有参有三种方式)</p><h4 id="2-set注入-重点"><a href="#2-set注入-重点" class="headerlink" title="2.set注入[重点]"></a>2.set注入[<font color=#FF0000>重点</font>]</h4><ul><li>依赖: Bean对象的创建依赖于容器</li><li>注入: Bean对象中的所有属性,是由容器来注入的.</li></ul><p>环境:<br>复杂类型Student<br>路径:<code>/spring-study/spring-04-di</code><br>Student的相关属性:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 复杂的属性</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> Address address;</span><br><span class="line"><span class="keyword">private</span> String[] books;</span><br><span class="line"><span class="keyword">private</span> List&lt;String&gt; hobbys;</span><br><span class="line"><span class="keyword">private</span> Map&lt;String,String&gt; card;</span><br><span class="line"><span class="keyword">private</span> Set&lt;String&gt; game;</span><br><span class="line"><span class="keyword">private</span> Properties info;<span class="comment">// 配置类</span></span><br><span class="line"><span class="keyword">private</span> String wife; <span class="comment">//用于null赋值</span></span><br></pre></td></tr></table></figure><br>::: warning<br><strong>提示</strong><br>这些属性都要写对应的get,set方法<br>(没有set方法怎么set注入啊)<br>:::</p><p>不同类型对应的set注入代码:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Address&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">value</span>=<span class="string">&quot;中国&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--普通值注入: value--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xx&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Bean注入: ref--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;address&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 看了下面的就知道,上面的这两个算是简写了注入方式 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--数组注入: --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;books&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>西游记<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>三国演义<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>水浒传<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>jojo<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--List注入: --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobbys&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>听歌<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>看电影<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Map注入: --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--map的注入和上面两个又不同哦--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;身份证&quot;</span> <span class="attr">value</span>=<span class="string">&quot;124124&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;银行卡&quot;</span> <span class="attr">value</span>=<span class="string">&quot;124125124&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Set注入: --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;game&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>WeGame<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>QQ<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--特殊值注入--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--空值注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;wife&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">null</span>&gt;</span><span class="tag">&lt;/<span class="name">null</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--特殊类型:Properties的注入: --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;学号&quot;</span>&gt;</span>2352512421<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;生日&quot;</span>&gt;</span>2001-13-2<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;性别&quot;</span>&gt;</span>男性<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;username&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><br>很显然:</p><ul><li>==value注入和ref注入最常见==,所有就有简写方式.</li><li>List,Array,Set都是内部存一类值的,注入方式都相同</li><li>Map,Properties这两种==最特别==,所以注入的方式也不同(注:这两种相互之间也不同)</li><li>null值注入比较特殊哦,有一个专门的标签.</li></ul><p>这些注入方式都可以在官网找到相同的:<br><img src="/spring5-day2/1.jpg" alt="官网部分截图"></p><h4 id="p命名和c命名空间注入-扩展方式注入"><a href="#p命名和c命名空间注入-扩展方式注入" class="headerlink" title="p命名和c命名空间注入(扩展方式注入)"></a>p命名和c命名空间注入(扩展方式注入)</h4><p>这两种命名空间注入的使用需要在前面用到的<code>beans.xml</code>中加上对应的<strong>约束语句</strong>:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- p命名空间 --&gt;</span></span><br><span class="line">xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</span><br><span class="line"><span class="comment">&lt;!-- c命名空间 --&gt;</span></span><br><span class="line">xmlns:c=&quot;http://www.springframework.org/schema/c&quot;</span><br></pre></td></tr></table></figure><br>这个是要加在头部标签<code>beans</code>中的<br>就是这样的:<br><img src="/spring5-day2/2.jpg" alt="图片"></p><p>p命名空间的用法:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--p命名空间注入, 可以直接注入属性,p: property的简写--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--当然这种注入方式只能注入一些简单的东西.可以说是又偷了一波懒--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.User&quot;</span> <span class="attr">p:age</span>=<span class="string">&quot;18&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;xx&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><br>c命名空间的用法:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--c命名空间注入,通过构造器注入,c:constructs--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这个注入方式需要写对应的有参构造器.也算是对应的简化吧--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.User&quot;</span> <span class="attr">c:age</span>=<span class="string">&quot;19&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;xxx&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><p>::: tips<br><strong>新用法</strong><br><code>// 之前是这样强转的</code><br><code>Student student = (Student) context.getBean(&quot;student&quot;);</code></p><p><code>// 这里将要的类型传递进去了.用到了反射</code><br><code>User user = context.getBean(&quot;user&quot;,User.class);</code></p><p>:::</p><p>依赖注入就先讲到这里了.<br>看<a href="https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-dependencies">官方文档</a>就知道这里不止这点.<br><img src="/spring5-day2/3.jpg" alt="如图"></p><h3 id="bean的作用域"><a href="#bean的作用域" class="headerlink" title="bean的作用域"></a>bean的作用域</h3><p>官网资料:<br><img src="/spring5-day2/4.jpg" alt="bean作用域"><br><strong>在这里重点掌握前两个</strong><br>后面四个一看就知道是SpringMVC中的.</p><h4 id="singleton-单例模式"><a href="#singleton-单例模式" class="headerlink" title="singleton(单例模式)"></a>singleton(单例模式)</h4><p>官网给的描述图片:<br><img src="/spring5-day2/5.jpg" alt="singleton"><br>==单例模式是默认模式==.这一点之前在<code>bean.xml</code>配置讲解中就提过一次了.<br>xml配置:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;..&quot;</span> <span class="attr">class</span>=<span class="string">&quot;...&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;singleton&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="prototype-原型模式"><a href="#prototype-原型模式" class="headerlink" title="prototype(原型模式)"></a>prototype(原型模式)</h4><p>说白了就是==每次从容器中get时都会生成一个新对象.==<br>这一点和单例模式是相对的.<br>官网给的描述图片:<br><img src="/spring5-day2/6.jpg" alt="Prototype"></p><p>xml配置:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;..&quot;</span> <span class="attr">class</span>=<span class="string">&quot;...&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="其余的几个模式-request-session-application"><a href="#其余的几个模式-request-session-application" class="headerlink" title="其余的几个模式:request,session,application"></a>其余的几个模式:request,session,application</h4><p>这些只能在web开发中用到.<br>所以这里就不展示了.</p><h3 id="自动装配Bean"><a href="#自动装配Bean" class="headerlink" title="自动装配Bean"></a>自动装配Bean</h3><p><strong>自动装配是Spring满足bean依赖的一种方式</strong><br>Spring中有==三种装配的方式==:</p><ol><li>在<code>xml</code>中显式配置(前面一直用的)</li><li>在<code>java</code>中显式配置</li><li>隐式的自动装配bean[<font color=#FF0000>重点</font>]</li></ol><p>自动装配的路径:<code>/spring-study/spring-05-autowired</code></p><p>先配置好环境(和之前的一模一样)<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Cat&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Dog&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;people&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.People&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;xxx&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dog&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;cat&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="自动装配的两种方式"><a href="#自动装配的两种方式" class="headerlink" title="==自动装配的两种方式=="></a>==自动装配的两种方式==</h4><p><strong>byName</strong>:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--自动装配byName: 会自动在容器上下文中找和自己对象set方法后面值对应的bean id--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;people&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.People&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;xxx&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><br>byName就是根据bean的id来找的.<br>所以要保证所有的id唯一,并且这个bean需要和自动注入的属性的set方法的值一致.</p><p><strong>byType</strong>:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;people&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.People&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;xxx&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><br>byType就是根据对象属性类型相同的进行匹配.<br>如果相同Type有多个就会报错,所以要保证类型全局唯一,并且这个bean需要和自动注入的属性的类型一致.<br>不过byType可以省略id自动装配.(byName就不行)<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Cat&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Dog&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;people&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.People&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;xxx&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="使用注解实现自动装配"><a href="#使用注解实现自动装配" class="headerlink" title="使用注解实现自动装配"></a>使用注解实现自动装配</h4><p>是不是觉得上面两种方式还是有点麻烦.QvQ<br>现在在进行进一步简化.<br><em>Spring从2.5就支持注解了.</em><br>::: tips<br><strong>使用注解须知:</strong></p><ol><li>导入约束 contest约束<br><code>xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</code></li><li>配置注解的支持<br><code>&lt;context:annotation-config/&gt;</code><br>:::<br>官网给出的xml:<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开启注解支持 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>==和前面的xml还是有点差别的.==<br>在idea中可以在原先的基础上写上<code>&lt;context:annotation-config/&gt;</code>,idea会自动导入约束.</li></ol><p>路径:<code>/spring-study/spring-05-autowired</code><br>这里是直接修改前面的xml.</p><p>现在呢,在<code>beans.xml</code>的配置就非常的简洁了<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Cat&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Dog&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;people&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.People&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><br>然后在<code>people.class</code>中添加注释<code>@Autowired</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">People</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>==这里的<code>@Autowired</code>是先通过Type注入,后通过Name注入==</p><p>这个<code>@Autowired</code>非常的nice.内部是通过反射实现的.所以在<code>people</code>类中甚至<code>cat,dog</code>对应的set方法都可以省略掉.但是 <strong>官方推荐要有set方法</strong></p><h5 id="注释-Autowired的用法总结"><a href="#注释-Autowired的用法总结" class="headerlink" title="注释@Autowired的用法总结"></a>注释<code>@Autowired</code>的用法总结</h5><pre><code>直接在属性上使用即可,也支持在对应的set方法上使用使用@Autowired后可以不编写set方法,但官方推荐写上</code></pre><p><strong><code>@Autowired</code>先通过ByType进行装配,不成功再进行ByName装配</strong></p><p>==科普:==<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@Nullable 这个注解标记的字段可以为null</span><br><span class="line">这个注解好像只是为了绕过编译器.在运行过程中没有任何用处</span><br></pre></td></tr></table></figure><br>而在<code>@Autowired</code>源码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Autowired &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">required</span><span class="params">()</span> <span class="keyword">default</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>如果我们显式的定义<code>@Autowired</code>成这个样子:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired(required = false)</span></span><br><span class="line"><span class="keyword">private</span> Cat cat;</span><br></pre></td></tr></table></figure><br><strong>这样做即使是<code>@Autowired</code>找不到注入的对象也不会抛出异常</strong></p><p>未完待续…</p>]]></content>
      
      
      <categories>
          
          <category> SSM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring5-day1</title>
      <link href="/2023/01/12/SSM%E5%AD%A6%E4%B9%A0/spring5-day1/"/>
      <url>/2023/01/12/SSM%E5%AD%A6%E4%B9%A0/spring5-day1/</url>
      
        <content type="html"><![CDATA[<div class="note info simple"><p><strong>开新坑了~</strong>.<br>跟着狂神学习spring5<br><a href="https://www.bilibili.com/video/BV1WE411d7Dv?p=1">狂神b站视频</a></p></div><h2 id="1-spring5"><a href="#1-spring5" class="headerlink" title="1.spring5"></a>1.spring5</h2><h3 id="1-1-IOC理论推导"><a href="#1-1-IOC理论推导" class="headerlink" title="1.1 IOC理论推导"></a>1.1 IOC理论推导</h3><p>路径:<code>spring-study/spring-01-ioc1</code></p><p>在UserServiceImpl中,我们是直接写死了这句话<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br></pre></td></tr></table></figure><br>很显然,如果用户需求改变了,我们就要回到这里修改这句话.</p><p>现在我们多写了一个set方法:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 利用set来实现动态值注入</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserDao</span><span class="params">(UserDao userDao)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>这样在用户层面就可以自己动态选择自己想要的接口.</p><p><strong>这点转变,就是IOC的思想的体现.</strong><br><mark>这种思想,本质上解决了问题,程序员不用再去管理对象的创建了.</mark><br>系统的耦合性大大降低,人员可以更加专注在业务的实现了.</p><p>::: warning<br><strong>提示</strong><br>注意:上面的例子只是用来说明IOC思想.<br>:::</p><p>思想图示:<br><img src="/spring5-day1/1.png" alt="IOC"></p><p>总结:<br>    控制反转是一种通过描述(XMIL或注解)并通过第三方去生产或获取特定对象的方式.<br>    在Spring中实现控制反转的是IoC容器,其实现方式是依赖注入(DI).</p><h3 id="1-2-HelloSpring编写"><a href="#1-2-HelloSpring编写" class="headerlink" title="1.2 HelloSpring编写"></a>1.2 HelloSpring编写</h3><p>路径:<code>spring-study/spring-02-hellospring</code></p><h4 id="1-2-1先编写一个简单的pojo类"><a href="#1-2-1先编写一个简单的pojo类" class="headerlink" title="1.2.1先编写一个简单的pojo类:"></a>1.2.1先编写一个简单的pojo类:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.li.pojo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> IH</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/5/10 21:38</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String str;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getStr</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStr</span><span class="params">(String str)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.str = str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;str=&#x27;&quot;</span> + str + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-2-配置spring相关的元数据"><a href="#1-2-2-配置spring相关的元数据" class="headerlink" title="1.2.2 配置spring相关的元数据"></a>1.2.2 配置spring相关的元数据</h4><p>在resources下新建一个<code>beans.xml</code><br>在<a href="https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-factory-metadata">官网</a>上拷贝以下内容进去<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;...&quot;</span> <span class="attr">class</span>=<span class="string">&quot;...&quot;</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- collaborators and configuration for this bean go here --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;...&quot;</span> <span class="attr">class</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- collaborators and configuration for this bean go here --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- more bean definitions go here --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><br>==平时的时候可以直接这样创建:==<br><img src="/spring5-day1/2.jpg" alt="spring的xml"></p><h4 id="3-修改beans-xml"><a href="#3-修改beans-xml" class="headerlink" title="3.修改beans.xml"></a>3.修改<code>beans.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--使用Spring来创建对象,在Spring中,这些都被称为Bean--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.Hello&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;str&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Spring&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-编写对应的用户代码"><a href="#4-编写对应的用户代码" class="headerlink" title="4.编写对应的用户代码"></a>4.编写对应的用户代码</h4><p>官网提供了spring对应的实例化容器的代码:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;services.xml&quot;</span>, <span class="string">&quot;daos.xml&quot;</span>);</span><br></pre></td></tr></table></figure><br>很显然这里我们没有这两个文件<code>&quot;services.xml&quot;, &quot;daos.xml&quot;</code>.所以替换成<code>beans.xml</code>就可以了.<br>这句话的意义: 获取spring的上下文对象.<br>有什么用呢:如果我们要去使用beans中的对象,直接从<code>context</code>中取出来就可以了.<br>就像这样:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Hello</span> <span class="variable">hello</span> <span class="operator">=</span> (Hello)context.getBean(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">hello.toString();</span><br></pre></td></tr></table></figure><br>这里就很明显可以看出<strong>控制反转</strong>的过程:</p><pre><code>hello对象是由Spring创建-&gt;看beans.xml中的bean标签就知道hello对象的属性也是由Spring容器设置的-&gt;bean标签下的property.</code></pre><blockquote><p>==提示:==<br>property中不仅可以用 value来指定<strong>基本数据类型</strong><br>还可以通过ref来引用Spring容器中创建好的<strong>对象</strong></p></blockquote><p>在视频5中,还将spring-01-ioc1修改成spring了.</p><p><strong>理解</strong>:</p><pre><code>我们彻底不用去程序中修改代码,要实现不同的操作,只需要在xml配置信息中进行修改.所谓的IoC:一句话: 对象由Spring来创建,管理,装配!</code></pre><h3 id="Spring-Bean参数的三种注入方式"><a href="#Spring-Bean参数的三种注入方式" class="headerlink" title="Spring Bean参数的三种注入方式"></a>Spring Bean参数的三种注入方式</h3><p>路径:<code>spring-study/spring-03-ioc2</code></p><p><strong>默认</strong>为==使用无参构造创建对象==.</p><p>如果要想使用有参构造呢?<br>官网提供了三种方式:</p><ol><li><p>通过参数下标赋值的方式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xx&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>:这里的下标是从<strong>0开始的</strong>.</p></li><li><p>通过参数的类型进行赋值</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xx&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>:<br>a.基本类型可以直接写,像String这样的==引用类型就要用全限定名==.<br>b.如果类型相同,就按照顺序来赋值.  </p></li><li><p>直接通过参数名(用的最爽)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xx&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>==另一个知识点:==<br>所有在<code>beans.xml</code>中注册过的对象.<br>在代码执行到<code>new ClassPathXmlApplicationContext(&quot;beans.xml&quot;);</code>时,都<strong>在容器中创建了一份,且仅一份</strong>.</p><h3 id="Spring-bean-xml的配置"><a href="#Spring-bean-xml的配置" class="headerlink" title="Spring bean.xml的配置"></a>Spring bean.xml的配置</h3><p>路径:<code>spring-study/spring-03-ioc2</code></p><h4 id="1-别名-alias"><a href="#1-别名-alias" class="headerlink" title="1.别名(alias)"></a>1.别名(alias)</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;userNew&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>添加了别名,就也可以通过别名来获取这个对象.<br>一对一的</p><h4 id="2-Bean的配置"><a href="#2-Bean的配置" class="headerlink" title="2.Bean的配置"></a>2.Bean的配置</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">id: bean 的唯一标识符. 相当于我们学的对象名</span></span><br><span class="line"><span class="comment">class: bean 对象所对应的全限定名</span></span><br><span class="line"><span class="comment">name: 也是别名,而且可以取多个别名,而且可以用很多种分割符号(完虐alias)</span></span><br><span class="line"><span class="comment">...</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.li.pojo.User&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user2 u3,s3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;李辉&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-import-团队"><a href="#3-import-团队" class="headerlink" title="3.import(团队)"></a>3.import(团队)</h4><p>import用于<strong>团队开发</strong>.它可以将多个配置文件,导入合并成为一个总配置.</p><p>这个就不演示了.</p><p>配置讲完了,很显然这只是表象,不然Spring也就不配称为”配置炼狱”.</p>]]></content>
      
      
      <categories>
          
          <category> SSM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔记布局要求</title>
      <link href="/2023/01/12/%E7%AC%94%E8%AE%B0%E5%B8%83%E5%B1%80%E8%A6%81%E6%B1%82/"/>
      <url>/2023/01/12/%E7%AC%94%E8%AE%B0%E5%B8%83%E5%B1%80%E8%A6%81%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>记录各种笔记的格式要求.<br>一般追求简单,实用.<br>写在这是为了防止忘记.</p></div><div class="note warning flat"><p>本文用于记录个人笔记习惯,仅供参考.</p></div><h4 id="1-1-OneNote格式要求"><a href="#1-1-OneNote格式要求" class="headerlink" title="1.1 OneNote格式要求"></a>1.1 OneNote格式要求</h4><ol><li>页面大标题 华文中宋 28</li><li>分块大标题 华文中宋 24</li><li>分块小标题 黑体 16,18左右</li><li>正文 黑体 14</li></ol><p>常用标记有 <mark>高亮文字</mark> <u>下划线</u> <strong>加重</strong> 三种.<br>中文和英文之间加空格<br><div class="note blue no-icon flat"><p>为了整体美观,某些正文也会加到16,18左右.</p></div></p>]]></content>
      
      
      <categories>
          
          <category> 习惯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 习惯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客美化(一)</title>
      <link href="/2023/01/11/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96-%E4%B8%80/"/>
      <url>/2023/01/11/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><font size=4><b>前言📝</b></font><p>完成Hexo博客的再搭建,在学习<a href="https://www.fomal.cc/">Fomalhaut🥝</a>大神视频后成功魔改自己的博客首页.</p></div><h2 id="1-美化进度报告"><a href="#1-美化进度报告" class="headerlink" title="1.美化进度报告"></a>1.美化进度报告</h2><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>文章置顶滚动栏(店长)</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>外挂标签的引入（店长）</p>            </div><p>有了外挂标签,支持非常多的文章样式</p><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>按键防抖</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>Vue + Element样式弹窗</p>            </div><p>配合按键防抖=&gt; 不同按键出现不同反应(复制弹窗)</p><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>配置手机PC页面白天黑夜共四个背景图(店长)</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>PDF 插件安装</p>            </div><p>我这需要将 ejs 升级到 2.5.5以上</p><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>宽屏适配</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>文章三栏(需要微调)</p>            </div><p>使用文章三栏不可使用 文章双侧栏显示(小冰) </p><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>右边按钮阅读进度（Leonus）</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>直达底部按钮</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>文章页顶部波浪线</p>            </div><p>完成了,还未微调 css 中<code>fill</code>属性.感觉有点突兀</p><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>白天雪花特效</p>            </div><p>个人感觉要去找更钟意的下落特效</p><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>导航栏魔改增强版(LYX)</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>页面样式调节</p>            </div><p>页面要经常调节</p><h2 id="阶段性总结一-23-1-13"><a href="#阶段性总结一-23-1-13" class="headerlink" title="阶段性总结一 23/1/13"></a>阶段性总结一 23/1/13</h2><p>页面配置在我连续两天摸着大佬<a href="https://www.fomal.cc/">Fomalhaut🥝</a>文章终于算的上是看的过去了.</p><p>待解决问题:</p><ul><li>字体字号</li><li>文章置顶滚动栏(我希望是横向滚动的)</li><li>首页分类磁贴(小冰)安装</li><li>右侧功能栏 更加丰富一些</li><li>阅读模式</li><li>其他页面的配置</li></ul><p>等下次有机会再进一步修改吧!</p>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 页面美化 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
